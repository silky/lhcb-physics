! $Id: release.notes,v 1.8 2005-10-13 21:43:07 robbep Exp $
! Package     : Gen/Generators
! Responsible : 

! 2005-10-13 - Patrick Robbe
 - Generators/GenBaseAlg : remove forward declaration not used

! 2005-10-03 - Patrick Robbe
 - HepMCUtils : use a static class instead of a namespace and add 
   IsBAtProduction utility function.
 - EvtDecayAlg : use new name of sort function.
 - EvtGenTool : declare global stream variable extern to avoid conflicts
 - Generators/IBeamTool.h : New abstract interface to tools to obtain beam
     parameters in generator interfaces.
 - Generators/IDecayTool.h : New abstract interface to decay generators.
 - Generators/IGenCutTool.h : New abstract interface to generator level cut
     tools.
 - Generators/IPileUpTool.h : New abstract interface to tools computing the 
     number of pile up interactions.
 - Generators/IProductionTool.h : New abstract interface to production 
     generators.
 - Generators/ISampleGenerationTool.h : New abstract interface to tools
     producing the different samples.
 - Generators/IVertexSmearingTool.h : New abstract interface to vertex smearing
     tools.
 - VariableLuminosity: pile up tool to decide the number of pile up 
     interactions depending on the current luminosity.
 - FixedNInteractions: pile up tool with fixed number of interactions per 
     event.
 - CollidingBeams: Beam tool for colliding beams and beam smearing
 - FixedTarget: Beam tool for fixed target
 - BeamSpotSmearVertex: vertex smearing tool for gaussian smearing.
 - FlatZSmearVertex: vertex smearing with flat Z distribution.
 - LHCbAcceptance: generator level cut tool with angular cut.
 - ExternalGenerator: base class for sample generation tool using an 
     external generator.
 - Signal: base class for sample generation tool using an external generator
     and generating signal samples.
 - EvtGenDecay: Decay tool interfacing EvtGen
 - Generation: Main algorithm steering production of event samples with an 
     external generator.
 - MinimumBias: Sample generation tool to generate minimum bias.
 - Inclusive: Sample generation tool to generate inclusive events.
 - SignalPlain: Sample generation tool to generate signal events with plain 
     method.

!========================= Generators v1r2 ===========================
! 2005-08-22 - Florence RANJARD
 - phocin.F - remove the #include nmxhep.inc, replace it with 10000.

!========================== Generators v1r1 ===========================
! 2005-07-11 - Gloria CORTI
 - requirements: introduce macro for fortran flags (no second underscore)

! 2005-06-24 - Gloria CORTI
 - Import changes as done in GeneratorModules v15r3 for merging of
   beam gas with min bias events
  + Changes to add possibility to set with properties the Generator data
   paths in the TES. By defaut they are set to XxxLocation::Default
   . src/component/EvtDecayAlg.{h,cpp} - property "HepMCEventLocation"
   . src/component/SetDecayAlg.{h,cpp} - property "HepMCEventLocation"
   . src/component/SmearVertexAlg.{h,cpp} - property "HepMCEventLocation"
   . Generators/GenBaseAlg.h
     src/Lib/GenBaseAlg.cpp - property "HepMCEventLocation"
                              property "HardInfoLocation"
                              property "GenHeaderLocation"
  + Changes to add possibility to apply smearing of primary vertex only
   to events produced with a certain generator (identified by name in
   HepMCEvent container). Controlled by setting name of generator in
   property "ApplyTo". The default is set to an empty string, in which
   case the smearing is applied to all events in container
   . src/component/SmearVertexAlg.{h,cpp}
   

!========================== Generators v1r0 ===========================
! 2005-06-20 - Patrick Robbe
 - new package. This package contains the base classes used by the
   generator algorithms and tools. It also contains generic algorithms
   and tools for debugging (DumpMC, DumpMCDecay), for EvtGen access
   (EvtGenTool, SetDecayAlg, EvtDecayAlg), for vertex smearing (SmearVertexAlg)
   and also utility functions (random number interfaces, HepMC help functions,
   String utilities to read generator Fortran-like options)

! ====================================================================
