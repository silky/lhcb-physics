! $Id: release.notes,v 1.37 2006-10-04 14:16:51 ibelyaev Exp $
! Package     : Gen/LbPythia
! Responsible : 

! 2006-10-04 - Vanya BELYAEV

 - LbPythia/GaussUserProcess.inc
      common block /GAUSSUSERPROCESS/ + numerical defintion of processes
      as fortran PARAMETERS, in particular LHEREADPROCESS=3  
 
    Modification to read LHE (Les Houches Event) parton level file:

 - src/Lib/upevnt.F,  src/Lib/upinit.F
      - modification to use LHEUPINIT and LHEUPEVNT in the case 
        of LHEREADPROCESS 
      - make use of common block fomr include-file 
 - src/Lib/lheupevnt.F, src/Lib/lheupinit.F
      new routines to be used to reading of LHE file
 - src/component/ReadLHEfile.cpp
      new "production tool" for reading LHE file 
 - src/Lib/SetUserProcess.F
      make use of common block fomr include-file 


 - LbPythia/Pythia.h,src/Lib/Pythia.cpp
      1) add function PyUpda   ( interface to fortran function PYUPDA)
      2) add function PyGive   ( interface to fortran function PYGIVE)


 - LbPythia/PythiaProduction.h, src/component/PythiaProduction.cpp
     1) Add new property "PYTHIA", which includes the PYTHIA commands 
        in a format used by PYGIVE routine, e.g.
     
          XXX.YYY.ZZZ.PythiaProduction.PYGIVE = {
            "MSTP(10)=10;MSPT(20)=20:MSTP(30)=30" , 
            "MSTP(10)=10;MSPT(20)=20:MSTP(30)=30" } ;
        Note: program PYGIVE prints the changed/modified variables.

     2) add possibility to read and write particle decay data:
     
        A) to write particle decay data:
           XXX.YYY.ZZZ.PythiaProduction.Commands +=
             { "pyinit pdtoutput pdt.out" } ;
           It will dump the whole particle decay data 
          (Using PYUPDA(1,LUN) routine) into the file pdt.out

        B1) to read the whole particle data table 
           XXX.YYY.ZZZ.PythiaProduction.Commands +=
             { "pyinit pdtinput pdt.in" , 
               "pyinit pdtlevel 2" } ; // PYUPDA(2,LUN)
        B2) to read only modified partice data entries: 
           XXX.YYY.ZZZ.PythiaProduction.Commands +=
             { "pyinit pdtinput pdt.in" , 
               "pyinit pdtlevel 3" } ; // PYUPDA(3,LUN)
        
          The default unit(LUN) for A&B is 59 could be changed 
           XXX.YYY.ZZZ.PythiaProduction.Commands +=
             { "pyinit pdtunit 15" } ;
   
          As ususla setting unit to 0 switches off both input 
         and output of the PYUPDA)
  
       3) "Event" listing is split into 2 parts 
           "Event" listing and "Hanronization" listing and could 
           be controlled independently 
          "event" listing corresponds to directive: 

         XXX.YYY.ZZZ.PythiaProduction.Commands +=
             { "pyinit pyliste 3" } ;

          and "hadronize" listing corresponds to directive 

         XXX.YYY.ZZZ.PythiaProduction.Commands +=
             { "pyinit pylisth 3" } ;

         (The first listing is perfored in PythiaProduction::generateEvent 
          method and the second one in PythisProduction::hadronize"
         
         4) For "initialize/event/hadronize" listings one can specify a 
            range of the entries to be used, e.g.
         
           - print the whole table:

           XXX.YYY.ZZZ.PythiaProduction.Commands +=
             { "pyinit pylisti 12" } ;
         
           - print only properties of particles from 1 to 10:

           XXX.YYY.ZZZ.PythiaProduction.Commands +=
             { "pyinit pylisti 12 1 10" } ;

           - print only properties of H0

           XXX.YYY.ZZZ.PythiaProduction.Commands +=
             { "pyinit pylisti 12 35 35" } ;

           - print only first 4 partons (inclusing iniial protons):
 
           XXX.YYY.ZZZ.PythiaProduction.Commands +=
             { "pyinit pyliste 3 1 4" } ;

           - print only first 100 entries:
 
           XXX.YYY.ZZZ.PythiaProduction.Commands +=
             { "pyinit pylisth 1 1 100" } ;
 
   Just for clarity (ordering rule):

   Pythia parameters are set in the following order

      - default setting 
      - explict command vector (property "Commamds") 
      - read the table         (command   "pyinit pdtinput pdt.in" ) 
      - commands  from PYGIVE  (property "PYGIVE") 
      - any possible configuration done through UPINIT 
   
   The dump of the output particle data table 
   (command "pyinit pdtoutput pdt.out")
   is performed *AFTER* call for PYINIT, and includes *ALL* 
   possible modifications, *EXCEPT* for modification done 
   for particle property service        


! 2006-10-03 - Patrick Robbe
 - PythiaProduction: change also time units to ns in the hadronize
   function.

! 2006-10-01 - Patrick Robbe
 - PythiaHiggs: adapt to new IGenCutTool interface.

! ==================== LbPythia v4r6 2006-07-04 ======================
! 2006-07-04 - Gloria CORTI
 - Follow general LHCb convention for name of componenet libraries
   loading and declaration file.
   . factories declared in LbPythia_load.cpp (modified)
   . remove LbPythia_entries.cpp and add LbPythia_dll.cpp

! ==================== LbPythia v4r5 2006-06-22 ======================
! 2006-06-22 - Gloria CORTI
 - Print message of production engine used at initialization.
   . PythiaProduction.cpp 

! ==================== LbPythia v4r4 2006-06-07 ======================
! 2006-06-07 - Patrick Robbe
 - PythiaProduction: put time in ns

! ==================== LbPythia v4r3 2006-05-19 ======================
! 2006-05-02 - Patrick Robbe
 - PythiaProduction.h: move to include directory
 - requirements: remove -fno-second-underscore fortran compilation flag
   and add the second underscore where necessary
 - upevnt and upinit: add functions for BcVegPy generator.

! ==================== LbPythia v4r2 2006-04-07 ======================
! 2006-04-06 - Patrick Robbe
 - PythiaProduction: fix forced fragmentation setup.

! 2006-04-04 - Patrick Robbe
 - pykfdi.F: remove IMPLICITE declarations
 - upevnt.F: add block data to define default value of gauss user process

! ==================== LbPythia v4r1 2006-03-27 ======================
! 2006-03-22 - Patrick Robbe
 - PythiaProduction: use MeV instead of GeV

! ==================== LbPythia v4r0 2006-01-19 ======================
! 2005-31-12 - Patrick Robbe
 - Adapt to new event model.

! ========================= LbPythia v3r0 ============================
! 2005-12-08 - Patrick Robbe
 - Pythia.{h,cpp}: remove PDFLIB
 - Remove old structure

! 2005-11-29 - Patrick Robbe
 - PythiaHiggs: add specific tool to cut at generator level on Higgs 
   events (two b quarks in 400 mrad).
 - PythiaProduction: do not change Higgs, top, W, Z widths in Pythia
   which are computed at init, and add default Pythia settings in software

! 2005-11-17 - Patrick Robbe
 - PythiaProduction: add force fragmentation interface

! ========================= LbPythia v2r1 ============================
! 2005-11-07 - Patrick Robbe
 - PythiaProduction: set particle properties of Pythia from 
   ParticlePropertySvc.

! 2005-11-04 - Patrick Robbe
 - Pythia: add calls to PYEDIT and PYEXEC
 - pyinit.F, pykfdi.F, pyrand.F, upenvt.F, upinit.F: move to Pythia 6.3
 - PythiaProduction: changes to be able to generate signal events with
   repeated hadronization.

! ========================= LbPythia v2r0 ============================
! 2005-10-13 - Patrick Robbe
 - PythiaAlg: set printPythiaParameters in protected section

! 2005-10-03 - Patrick Robbe
 - Pythia.h : new utility class to interface Pythia FORTRAN functions.
 - PythiaProduction: Production tool interfacing Pythia.
 - PythiaAlgorithm : use new HepMC sort function.
 - WZPythiaAlg : add algorithms to generate W and Z events.

! ========================= LbPythia v1r2 ============================
! 2005-08-22 - Florence RANJARD
 - src/Lib/lunep.F - do not include nmxhep.inc but copy the content.

! ========================== LbPythia v1r1 ============================
! 2005-07-11 - Gloria CORTI
 - requirements: introduce macro for fortran flags (no second underscore)

! 2005-06-27 - Patrick Robbe
 - Lib/pyinit.F: apply upinit only when there is a user process, for safety.

! ========================== LbPythia v1r0 ============================
! 2005-06-21 - Patrick Robbe
 - New package: this package contains all functions related to the 
   use of Pythia in LHCb (PythiaAlg, HiggsPythiaAlg, TTbarPythiaAlg), 
   functions to access Pythia Fortran common block and reimplementation
   of some Pythia functions for specific action in LHCb (forced fragmentation
   mechanism).

! ====================================================================
