!-----------------------------------------------------------------------------
! Package     : Gen/LbMIB
! Responsible : Magnus LIENG, Gloria CORTI
! Purpose     : Package to generate Machine Induce Background from source
!               obtained with dedicated simulations
!-----------------------------------------------------------------------------

!=========================== LbMIB v3r4 2009-08-11 =========================
! 2009-08-25 - Magnus Lieng
 - Fixed linear read bug
   .TimeCorrSource.cpp
 - Added option TimeOfFile to be used to indicate the time a MIB file 
   represent. This used to be 1 sec per definition.
   .TimeCorrSource.cpp
   .TimeCorrSource.h
   .TimeCorr-Example.opts
 - Changes to output on finalize
   .TimeCorrSource.cpp

! 2009-08-11 - Magnus Lieng
 - Fixed timing issue
   .TimeCorrSource.cpp

!=========================== LbMIB v3r3 2009-05-05 ===========================
! 2009-05-05 - Magnus Lieng
 - Added variable 'CombW' to TTree 'Particles' in root file generation 
   scripts. 'CombW' is equal to 'PartW' multiplied by 'LossW' of the related 
   event. 'CombW' thus represents the likelyhood of the given particle to be
   generated P = CombW/Sum(CombW). The variable is present only for user 
   analysis. It is not used by LbMIB itself.
   .makeRootFileFromNewFormat.py
   .makeRootFileFromOldFormat.py

 - Changed script name 'makeRootFile.py' to 'makeRootFileFromNewFormat.py' to
   to make the separation between it and 'makeRootFileFromOldFormat.py' more 
   obvious.
   .makeRootFile.py
   .makeRootFileFromNewFormat.py

 - Added option file example for the use of the time correlated source.
   .TimeCorr-Example.opts
 
 - Fixed histogram generation. Dimensions are now plotted in cm.
   .TimeCorrSource.cpp

 - Fixed random interaction selection. The linear search in the root file did
   not return the correct value. Result was that the first interaction in the
   envelope was always selected.
   .TimeCorrSource.cpp

!=========================== LbMIB v3r2 2009-04-01 ===========================
! 2009-04-01 - Magnus Lieng
 - Added new time correlated MIB tool. This tool uses a root file as input.
   The root file contains two trees; one for particles and one for events. 
   TimeCorrSource randomly generates events containing certain particles as
   opposed to CollimatorSource which randomly generates particles.

   The list of options to steer the behaviour of the code and how to use them
   is given below:
   HepMCEvents         The TS location of the Event
   GenHeader           The TS location of the Generation Header
   GenCollisions       The TS location of the Collision

   ParticleSourceFile  Root file containing the events and particles to be 
                       generated.

   ScalingFactor       Scaling factor used to modify the number of particles
                       created in an event.
   BunchFrequency      Scaling factor used to modify the number of particles
                       created in an event. Indicates the frequency used to
                       generate the input file.
   BeamEnergy          Energy of the beam protons. Used to correct particle 
                       timing.

   Luminosity          Luminosity to be set in header.

   GenerationHist      True to generate histograms.

   ForcePartPerEvt     -1  : Use random number of particles in event.
                       >=0 : Force the generation of this amount particles per
                             event.

   ReadFileFromOffset  -1  : Choose random particles using weight based
                             envelope method.
                       >=0 : Pick particles sequentially from file starting at
                             this particle number. Envelope generation and
                             random particle selection is ignored.
                             Weight information is saved in vertex.

   EnvelopeSize        Amount of events contained in one envelope.

   ZParticleOrigin     Z position of particles as given in the input file. 
   ZParticleGen        Z position to generate particles. If this is different
                       from ZParticleOrigin, timing of the particles are 
                       re-calculated according to particle and beam 
                       kinematics as well as the two Z positions.
   ZDirection          Z direction to generate particles (+1/-1)

   EventType           Event type code.

   . TimeCorrSource.cpp
   . TimeCorrSource.h
 - Added python script to generate input files for TimeCorrSource both using
   the new and old text file format. The old text format creates fake events 
   where each event contains only one particle.
   . makeRootFile.py
   . makeRootFileFromOldFormat.py
 
!=========================== LbMIB v3r1 2009-01-13 ===========================
! 2008-12-11 - Patrick Robbe
 - CollimatorSource.cpp: set signal_process_vertex to define primary vertex
   for Geant4

!=========================== LbMIB v3r0 2008-08-25 ===========================
! 2008-07-27 - Patrick Robbe
 - Move to HEPMC2 

!=========================== LbMIB v2r3 2008-07-04 ===========================
! 2008-07-04 - Magnus Lieng
 - Fixed compatability issue with Windows. 'inttypes.h' no longer used.
   . CollimatorSource.h

!=========================== LbMIB v2r2 2008-05-05 ===========================
! 2008-05-05 - Magnus Lieng
 - Fixed binary data format to be compatible with both 32 and 64bit platforms
   . CollimatorSource.h

! 2008-04-28 - Magnus Lieng
 - ASCII input files for TCT background and Beam-Gas background is located on
   Castor at /castor/cern.ch/lhcb/background/LHC/2006_Collimators and 
   2008_BeamGas.
 - Added python modules
   . plotter.py
   . gasmap.py
 - Added python script for analyzing ASCII input files.
   . mibplotter.py
 - Added python script to translate and rescale Beam-Gas mars files to LbMIB
   format. Gas density maps is located in folder 'data'. Beam-Gas mars files
   can be found on Castor at /castor/cern.ch/lhcb/background/LHC/mars.
   . beamgas2mib.py
   . beamgas2mib_opts.py
 - Added options for Beam Gas files
   . MIB-BeamGasStartupNoShield.opts

!=========================== LbMIB v2r1 2007-10-02 ===========================
! 2007-10-02 - Gloria Corti for Karl Harrison
 - Fix compilation problem on Win32 casting to double
   . CollimatorSource.cpp

! 2007-10-02 - Gloria Corti
 - Remove double section in example options
   . MIB-Example.opts

!=========================== LbMIB v2r0 2007-08-22 ===========================
! 2007-08-22 - Gloria Corti for Magnus Lieng
 - Book "XXXInput" histogram only when ascii file is read to create binary
   since the filling is done at that moment
   . CollimatorSource.cpp

! 2007-08-22 - Gloria Corti
 - Fix checking of variable values for printout (it was '=' insted of "==")
   . CollimatorSource.cpp

! 2007-08-21 - Gloria Corti for Magnus Lieng
 - Fix bug in MIB-Example.opts
   . the option "MIBackground.MIBSource" should be "MIBackground.MIBSources"

! 2007-08-17 - Gloria Corti
 - Modify code as not to process empty events, i.e. the generation of an
   "event" (or bunch) is repeated until at least one track from any MIB source
   is found. This allows to increase the significant sample that can be
   generated and processed in the simulation. 
   In orded to do that the original algorithm has been split in a steering
   algorithm and a tool where the actual generation of the "event" is done.
   The algorithm, MIBackground, handles the communication with the TES and
   filling of information in the GenHeader (i.e. luminosity and even type
   when the events are generated in stand-alone) and of the creation of the
   various tools for the different sources (TCTH, TCTV, hadrons, muons).
   The list of tools to use must be specified in job options,
   MIBackground.MIBSource = {"CollimatorSource/TCTVShieldMuons"}, for example.
   At least one instance of the CollimatorSource tool has to be passed in 
   the MIBSource list. 
   The tool, CollimatorSource, handles the actual generation of one "event"
   based on its configuration, via the method generateEvent(). In fact this 
   method is almost identical to the execute() of the original 
   CollimatorSourceAlg.
   Since we want to be able to produce files with only one given source or
   with many source mixed togheter to account for the possibility of having
   two particles from differnt sources in the same event, the MIBackground 
   algortihm calls sequencially the generateEvent() method of all its instances
   of the source tool and check the presence of at least one particle only 
   at the end. The procedure is repeated until one non-empty "event" is 
   generated at which point MIBackground::execute() returns succesfully. 
   Counters are kept in both the tool and the algorithm to account for the
   amount of empty/non-empty events that have been generated. This counters
   are essential to a posteriori normalize the rates.
   As for the previous version of the code this generation can be stand-alone
   or merged with other type of events, i.e. pp collisions.
 - Code changes:
   . CollimatorSourceAlg.{h,cpp} - REMOVED and split into
   . MIBackground.{h,cpp}        - NEW steering algorithm
   . CollimatorSource.{h,cpp}    - NEW generation tools
   . IMIBSource.h                - NEW interface for the MIB tools
   . LbMIB_load.cpp              - replace declaration of old algorithm with
                                   that of new one and declare new tool. This
                                   is done to keep the package compatible with
                                   Gauss v25rX series
 - All steering options listed in the previous release notes exist and have
   the same effect, but they belong to either the MIBackground algorithm or
   the CollimatorSource tool.
   . Options for MIBackground originally in CollimatorSourceAlg:
      HepMCEvents, GenHeader, GenCollisions, EventType, Luminosity
   . Options for CollimatorSource originally in CollimatorSourceAlg
      ParticleSourceFile, FileIsBinary, SaveTempBinFile, TempBinFileName,
      ScalingFactor, BunchFrequency, GenerationHist, ForcePartPerEvt,
      ReadFileFromOffset, EnvelopeSize, ZParticleOrigin, ZDirection
   See in previous version of release notes for explanation.
 - A new option has introduced in MIBackground to pass the mandatory list of
   source tool instances:
   . MIBSource : def = {""}, must be provided in options
 - The options have been modified to reflect the change in name of
   the algorithm and tool and their instanciations.
   . MIB-Example.opts      - modified, example and explanation of options
   . MIB-Shield.opts       - modified, default options to generate event with
                             all sources added to pp collisions for the case
                             of full shield in tunnel
   . MIB-StagedShield.opts - modified, default options to generate event with
                             all sources added to pp collisions for the case
                             of staged shield in tunnel (initial configuration)
   NOTE that events types have been defined in DecFiles v13r1 (see explanation 
   in its release notes and should be used for the stand-alone generation of
   the MIB events.
   For merging all sources with pp collisions in your main Gauss options 
   include after those of the chosen EventType either
    "$include $LBMIBROOT/options/MIB-Shield.opts"
   or 
    "$include $LBMIBROOT/options/MIB-StagedShield.opts"

!=========================== LbMIB v1r0 2007-05-16 ===========================
! 2007-05-16 - Gloria CORTI
 - Fix problem with temporary file name in method instead of reset source
   name, causing error when reading binary and name of binary (not used) 
   is not set in options.
 - Minor clean up of the code
   . modify some print level
   . print event type
   . lenght of lines
 - Prepare example options with explanations from what Magnus provided and
   options for generating events in a single go from horizontal and tertiary
   collimator for both muons and hadrons: essentially executing 4 times
   the algorithm with different configurations, both for the case of staged
   and full shield. Guidelines on event numbers are provided in the example
   options that is for a single algorithm.
   . MIB-Example.opts
   . MIB-Shield.opts
   . MIB-StagedShield.opts
   Note that the existing configuration at Point8 is StagedShield.
 - For more details refer to
    http://cern.ch/lhcb-background/Machine/CollimatorSources.html

! 2007-03-28 - Magnus LIENG
 - First version of new package.
   The LbMIB is an generator created to import external particle distribution 
   files, and recreate the particles in the Gauss simulation.

   The various steps in the procedure are described below.

   Init:            If given a flat file of the format 
                    "<PID> <Weight> <T> <x> <y> <dx> <dy>", the file is read 
                    and converted to a temporary LbMIB binary file. If a 
                    LbMIB binary file is given, this step is ignored. See 
                    http://lhcb-background.web.cern.ch/lhcb-background/Machine
                    /Background.html for more information on the flat particle 
                    file format.

                    The files are normalized so that the sum of the weights of 
                    the particles in the file give the particle flux at a 
                    z-position over one second. The weight of an individual 
                    particle represent a relative likelyhood to be generated.

                    Envelopes are created in memory, i.e. for every X number of
                    particles, the current sum of weights is kept in memory. 
                    This is to increase search speed during the random 
                    particle selection procedure.

   Execute:         The number of particles to generate is calculated from the 
                    sum of particle weights, frequency and scaling factor. The 
                    amount of particles is given by a poisson distribution with
                    Average=SumOfWeights*ScalingFactor/Frequency.

                    For each particle to be generated a random number between 0
                    and the sum of particle weights is selected. The envelopes 
                    are searched to locate the envelope containing the random 
                    particle. When the envelope is found, the LbMIB binary 
                    file is searched to find the correct particle within the 
                    envelope. The particle is the generated.

   Finalize:        Temporary LbMIB binary file is deleted.

   The list of options to steer the behaviour of the code and how to use them
   is given below:
   HepMCEvents         The TS location of the Event
   GenHeader           The TS location of the Generation Header
   GenCollisions       The TS location of the Collision

   ParticleSourceFile  Particle input file to read.

   FileIsBinary        True if the file is a LbMIB binary file. False if flat 
                       file. If True, the file convertion at init is skipped.
   SaveTempBinFile     True will keep the temporary LbMIB binary file. False 
                       will delete it at the end of the run. If given a LbMIB 
                       binary file, this option is ignored.
   TempBinFileName     This option gives the name of the LbMIB binary file 
                       created. If given a LbMIB binary file, this option is 
                       ignored.

   ScalingFactor       Scaling factor used to modify the number of particles 
                       created in an event. 
   BunchFrequency      Scaling factor used to modify the number of particles
                       created in an event. Indicates the frequency used to 
                       generate the input file.

   Luminosity          Luminosity to be set in header.

   GenerationHist      True to generate histograms.

   ForcePartPerEvt     -1  : Use random number of particles in event.
                       >=0 : Force the generation of this amount particles per 
                             event.

   ReadFileFromOffset  -1  : Choose random particles using weight based  
                             envelope method.
                       >=0 : Pick particles sequentially from file starting at 
                             this particle number. Envelope generation and  
                             random particle selection is ignored.  
                             Weight information is saved in vertex.

   EnvelopeSize        Amount of particles contained in one envelope.

   ZParticleOrigin     Z position to generate particles. Regardless of this 
                       option, the particles are created so that they should 
                       pass z=0 at t=0.
   ZDirection          Z direction to generate particles (+1/-1)

   EventType           Event type code.

!=============================================================================
