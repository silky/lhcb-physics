// Default Boole job Options.
//
// This file is included by the geometry specific options files.
//
// This file defines, sequences and configures the algorithms to be executed
//==============================================================

#units "$STDOPTS/units.opts"

// Unpack MCParticles and MCVertices if not existing on input file
ApplicationMgr.ExtSvc  += { "DataOnDemandSvc" };
DataOnDemandSvc.AlgMap += { "MC/Particles" : "UnpackMCParticle"
                          , "MC/Vertices"  : "UnpackMCVertex"
                          };
// And pack them for the output if not on the input file...
DataOnDemandSvc.AlgMap += { "pSim/MCParticles" : "PackMCParticle",
                            "pSim/MCVertices"  : "PackMCVertex" };
// Phases to be executed
ApplicationMgr.TopAlg += { "ProcessPhase/Init"
                         , "ProcessPhase/DigiPrev2"
                         , "ProcessPhase/DigiPrev1"
                         , "ProcessPhase/Digi"
                         , "ProcessPhase/DigiNext1"
                         , "ProcessPhase/DigiNext2"
                         , "ProcessPhase/Trigger"
                         , "ProcessPhase/Relations" 
                         , "ProcessPhase/Moni"
                         , "ProcessPhase/Output"
                         };
#include "$BOOLEOPTS/BooleMoni.opts"

// Set up TAE structure. These phases are only filled if TAE-xxx.opts included
DigiPrev2.RootInTES = "Prev2/";
DigiPrev1.RootInTES = "Prev1/";
DigiNext1.RootInTES = "Next1/";
DigiNext2.RootInTES = "Next2/";
DigiPrev2.GlobalTimeOffset = +50*ns;
DigiPrev1.GlobalTimeOffset = +25*ns;
DigiNext1.GlobalTimeOffset = -25*ns;
DigiNext2.GlobalTimeOffset = -50*ns;

// Detectors to be processed in each phase
Init.DetectorList += { "Boole", "Data", "MUON" };
Digi.DetectorList += { 
                        "VELO"
                      , "TT"
                      , "IT"
                      , "OT"
                      , "RICH"
                      , "CALO"
                      , "MUON"
                      , "L0"
                     };
Trigger.DetectorList  += { "L0" };
Relations.DetectorList = { 
                           "VELO"
                         , "TT"
                         , "IT"
                         , "OT"
                         , "Tr"
                         , "RICH"
                         , "CALO"
                         , "MUON"
                         , "L0"
                         };

// Initialization
InitBooleSeq.Members += { "BooleInit" };

// Spillover
InitDataSeq.Members += { "MergeEventAlg/SpilloverAlg" };
#include "$DIGIALGROOT/options/Spillover.opts"

// Muon Background
InitMUONSeq.Members += { "MuonBackground/MuonLowEnergy" };
#include "$MUONBACKGROUNDROOT/options/MuonLowEnergy-G4.opts"
InitMUONSeq.Members += { "MuonBackground/MuonFlatSpillover" };
#include "$MUONBACKGROUNDROOT/options/MuonFlatSpillover-G4.opts"

// Subdetector algorithms
//--------------------------------------------------------------
// L0 trigger Simulation
DigiL0Seq.Members += { "GaudiSequencer/L0SimulationSeq" };
#include "$L0DUROOT/options/Boole.opts"

// Calorimeter digitisation
DigiCALOSeq.Members = {
  "CaloSignalAlg/SpdSignal",
  "CaloSignalAlg/PrsSignal",
  "CaloSignalAlg/EcalSignal",
  "CaloSignalAlg/HcalSignal",
  "CaloDigitAlg/SpdDigit",
  "CaloDigitAlg/PrsDigit",
  "CaloDigitAlg/EcalDigit",
  "CaloDigitAlg/HcalDigit",
  "CaloFillPrsSpdRawBuffer"
 ,"CaloFillRawBuffer/EcalFillRawBuffer"
 ,"CaloFillRawBuffer/HcalFillRawBuffer"
};
// set the coding type for TELL1: 
EcalFillRawBuffer.DataCodingType = 2;
HcalFillRawBuffer.DataCodingType = 2;
CaloFillPrsSpdRawBuffer.DataCodingType = 3;


// Rich digitisation
#include "$RICHREADOUTOPTS/BooleDigi.opts"
#include "$RICHDAQROOT/options/Boole_FillRawBuffer.opts"

// Muon digitisation
DigiMUONSeq.Members += { "MuonDigitization" };
DigiMUONSeq.Members += { "MuonDigitToRawBuffer" };

// Silicon Tracker digitisation
#include "$STDIGIALGORITHMSROOT/options/itDigi.opts"
#include "$STDIGIALGORITHMSROOT/options/ttDigi.opts"
#include "$STDAQROOT/options/stDAQ.opts"

DigiITSeq.Members += { "MCSTDepositCreator/MCITDepositCreator" };
DigiITSeq.Members += { "MCSTDigitCreator/MCITDigitCreator" };
DigiITSeq.Members += { "STDigitCreator/ITDigitCreator" };
DigiITSeq.Members += { "STClusterCreator/ITClusterCreator" };
DigiITSeq.Members += { "STClusterKiller/ITClusterKiller" };
DigiITSeq.Members += { "STClustersToRawBankAlg/createITRawBuffer" };

DigiTTSeq.Members += { "MCSTDepositCreator/MCTTDepositCreator" };
DigiTTSeq.Members += { "MCSTDigitCreator/MCTTDigitCreator" };
DigiTTSeq.Members += { "STDigitCreator/TTDigitCreator" };
DigiTTSeq.Members += { "STClusterCreator/TTClusterCreator" };
DigiTTSeq.Members += { "STClusterKiller/TTClusterKiller" };
DigiTTSeq.Members += { "STClustersToRawBankAlg/createTTRawBuffer" };

// Outer tracker digitisation
DigiOTSeq.Members += { "MCOTDepositCreator"
                      ,"MCOTTimeCreator"
                      ,"OTFillRawBuffer"
                     };

// Velo digitisation and clustering (also for PuVeto and trigger)
#include "$VELOSIMULATIONROOT/options/VeloSim.opts"
#include "$VELOALGORITHMSROOT/options/VeloAlgorithms.opts"
DigiVELOSeq.Members += { "VeloSim/VeloSim" };
DigiVELOSeq.Members += { "VeloSim/VeloPUSim" };
DigiVELOSeq.Members += { "VeloDataProcessor" };
DigiVELOSeq.Members += { "VeloClusterMaker" };
DigiVELOSeq.Members += { "PrepareVeloRawBuffer" };

// Modify printout defaults
#include "$BOOLEOPTS/BooleMessage.opts"

// Run the L0Filter always, may be used for selective output
TriggerL0Seq.Members += { "L0Filter" };

// Set up tag collection for L0 filter result, and switch off by default
#include "$L0DUROOT/options/ETC.opts"
ApplicationMgr.OutStream -= { "Sequencer/SeqWriteTag" } ;

//--------------------------------------------------------------
// Relations to MC truth. Built unconditionally regardless of monitoring
//--------------------------------------------------------------
RelationsVELOSeq.Members += { "DecodeVeloRawBuffer" };
DecodeVeloRawBuffer.DecodeToVeloClusters     = true;
DecodeVeloRawBuffer.DecodeToVeloLiteClusters = false;
RelationsVELOSeq.Members += { "VeloCluster2MCHitLinker" };
RelationsVELOSeq.Members += { "VeloCluster2MCParticleLinker" };

ITDigitLinker.DetType   = "IT";
ITClusterLinker.DetType = "IT";
ITTruthLinker.DetType   = "IT";
RelationsITSeq.Members += { "STDigit2MCHitLinker/ITDigitLinker" };
RelationsITSeq.Members += { "STCluster2MCHitLinker/ITClusterLinker" };
RelationsITSeq.Members += { "STCluster2MCParticleLinker/ITTruthLinker" };

RelationsTTSeq.Members += { "STDigit2MCHitLinker/TTDigitLinker" };
RelationsTTSeq.Members += { "STCluster2MCHitLinker/TTClusterLinker" };
RelationsTTSeq.Members += { "STCluster2MCParticleLinker/TTTruthLinker" };

RelationsOTSeq.Members += { "OTMCDepositLinker" };
RelationsOTSeq.Members += { "OTMCHitLinker" };
RelationsOTSeq.Members += { "OTMCParticleLinker" };

RelationsTrSeq.Members += { "BuildMCTrackInfo" };

#include "$RICHMCASSOCIATORSROOT/options/BooleRelations.opts"

#include "$CALOASSOCIATORSROOT/options/BooleRelations.opts"

RelationsMUONSeq.Members += { "MuonDigit2MCParticleAlg" };
RelationsMUONSeq.Members += { "MuonTileDigitInfo" };

RelationsL0Seq.Members += { "L0CaloToMCParticleAsct" };
RelationsL0Seq.Members += { "L0CaloToMCParticleAsct/L0CaloFullTruth"};
L0CaloFullTruth.InputContainer = "Trig/L0/FullCalo";
