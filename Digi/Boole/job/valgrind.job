#!/bin/csh
###########################################################
#   Script for running valgrind on Boole
#
###########################################################
#
# in BATCH, output files are written in the BATCH machine
# and copied at the end to your $MYWORKDIR output directory
# in INTERACTIVE output files are written to the current directory
#

if ($#argv == 0 ) then
  echo "\nUsage: valgrind.job <options>"
  echo " where:"
  echo "  <options> (mandatory) is name of options file (e.g. v200402)"
  exit 0
else
  set Dver = $1
  shift
endif
#   
set Bversion = "v7r2"
echo "Excuting Boole $Bversion using options file $Dver.opts"
#

if ($?LS_SUBCWD) then 
# in BATCH, WORKDIR is set by the system
# in BATCH, location of executable has to be given explicitly
  setenv MYJOBROOT ~/cmtuser/Digi/Boole/$Bversion
else
# in interactive set WORKDIR to submission directory
  set WORKDIR = $PWD
# in interactive, executable is under same root directory as this command file
  cd `dirname $0` 
  cd ..
  set MYJOBROOT = $PWD
endif

# == set the program environment
if ($?Boole_release_area) then
  source $Boole_release_area/BooleEnv/$Bversion/cmt/setup.csh
else
  source $LHCBRELEASES/BooleEnv/$Bversion/cmt/setup.csh
endif
source $MYJOBROOT/cmt/setup.csh -tag=$CMTDEB

# Go to working directory
cd $WORKDIR

set SuppFile = "./Boole.supp"

if ($?LS_SUBCWD) then
# == in batch copy the executable and options files to $WORKDIR
  cp $MYJOBROOT/$CMTDEB/Boole.exe tmpjob_$Dver.exe
  cp $MYJOBROOT/options/*.opts .
  cp $MYJOBROOT/job/$SuppFile $SuppFile
  setenv BOOLEOPTS .
else
# == in interactive create a link to the executable
  ln -fs $MYJOBROOT/$CMTDEB/Boole.exe tmpjob_$Dver.exe
endif

# == run the excutable ================================
valgrind --demangle=no --error-limit=no --leak-check=yes --num-callers=20 --suppressions=$STDOPTS/Gaudi.supp --suppressions=$SuppFile tmpjob_$Dver.exe $BOOLEOPTS/$Dver.opts >& mem_errors.log

# == job is finished: remove temporary files ==========
rm tmpjob_$Dver.exe
if ($?LS_SUBCWD) then
  rm -f *.opts
# if in batch copy output files to user directories
  ls *.* >! RETURN
endif

exit 0
