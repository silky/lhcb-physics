#============================================================================
# $Id: requirements,v 1.78 2009-09-14 08:43:50 graven Exp $
# Created    : 03/06/2005 by P. Koppenburg
# Maintainer : G. Raven
#============================================================================

#============================================================================
package Moore
version v7r4

branches doc cmt options python

# Packages needed to compile and link the application
use GaudiConf          v*                   -no_auto_imports
use GaudiKernel        v*

# Packages needed to resolve external dependencies at run time
use Python             v*    LCG_Interfaces -no_auto_imports
use HepMC              v*    LCG_Interfaces -no_auto_imports

# Databases
use DDDB               v1r*  Det            -no_auto_imports
use ParamFiles         v8r*                 -no_auto_imports
use FieldMap           v5r*                 -no_auto_imports
use HltTCK             v1r*  TCK            -no_auto_imports

# The rest are needed only to set up environment variables for job options
# and to give a cmt broadcast dependency for user checked out component packages

# From GAUDI project
use GaudiSvc           v*                   -no_auto_imports
use GaudiPoolDb        v*                   -no_auto_imports
use GaudiPython        v*                   -no_auto_imports

# From LHCbSys
use LHCbAlgs           v*    Kernel         -no_auto_imports
use L0Interfaces       v*    L0             -no_auto_imports

#-- Lbcom packages 
use CaloTools		v5r10p1	Calo
use HltDAQ                      v1r0p2  Hlt
use LbcomSys            v*        -no_auto_imports

#-- Rec packages 
# Calorimeter                         # Maintainer
use CaloMoniDst          v3r9    Calo # Olivier Deschamps
use CaloReco             v5r0    Calo # Olivier Deschamps

# Muon
use MuonID               v7r1    Muon # Erica Polycarpo, Miriam Gandelman
use MuonPIDChecker       v4r0    Muon # Erica Polycarpo, Miriam Gandelman

# Non sub-detector specific components
use GlobalReco           v6r25   Rec  # Chris Jones
use LumiAlgs             v2r2    Rec  # Jaap Panman
use RecAlgs              v1r8    Rec  # Marco Cattaneo
use RecCheckers          v1r2    Rec  # Marco Cattaneo
use RecUtils             v1r5    Rec  # Juan Palacios, Patrick Koppenburg

# Rich
use RichRecMCTools       v2r24   Rich # Chris Jones
use RichRecQC            v2r32   Rich # Chris Jones
use RichRecTrackTools    v1r13   Rich # Chris Jones

# Calorimeter                         # Maintainer
use CaloPIDs             v5r0   Calo # Victor Egorychev, Vanya Belyaev

# Tf packages: Track Pattern Recognition
use PatVelo              v3r16   Tf   # David Hutchcroft
use PatVeloTT            v3r7    Tf   # Mariusz Witek
use TsaAlgorithms        v3r11   Tf   # Matt Needham
use TrackMatching        v2r23   Tf   # Eduardo Rodrigues

# Tr packages: Track Fit & Pattern Reco Validation with MonteCarlo
use NNTools              v1r5    Tr   # Adrian Perieanu
use PatChecker           v3r4p2  Tr   # Olivier Callot, David Hutchcroft
use PatFitParams         v3r2p3  Tr   # Olivier Callot
use TrackAssociators     v2r6    Tr   # Eduardo Rodrigues, Edwin Bos
use TrackCheckers        v4r7    Tr   # Eduardo Rodrigues
use TrackExtrapolators   v2r22   Tr   # Eduardo Rodrigues
use TrackFitEvent        v4r0    Tr   # Eduardo Rodrigues
use TrackFitter          v2r36   Tr   # Eduardo Rodrigues
use TrackIdealPR         v2r18   Tr   # Eduardo Rodrigues
use TrackMCTools         v2r24   Tr   # Eduardo Rodrigues
use TrackMonitors        v1r12   Tr   # Wouter Hulsbergen, Stephanie Menzemer
use TrackProjectors      v2r23   Tr   # Wouter Hulsbergen
use TrackTools           v3r20   Tr   # Eduardo Rodrigues
use TrackUtils           v1r28   Tr   # Eduardo Rodrigues

# Tf packages: Track Pattern Recognition
use TrackSys             v4r24   Tf   # Stephanie Hansmann-Menzemer 
use PatAlgorithms        v3r22   Tf   # Stephanie Hansmann-Menzemer
use TfTools              v1r7    Tf   # Stephanie Hansmann-Menzemer
use TrackSeeding         v1r4p2  Tf   # Eduardo Rodrigues, Henk Jan Bulten

# Primary Vertex Finder
use PatPV                v3r8    Tr   # Mariusz Witek

# Muon
use MuonTools            v5r0p1  Muon # Alessia Satta
use MuonTrackAlign       v1r7p2  Muon # Silvia Pozzi

# Rich
use RichENNRingFinder    v1r1    Rich # Chris Jones + Ulrich Kerzel
use RichGlobalPID        v3r10p2 Rich # Chris Jones
use RichIFBAnalysis      v1r0    Rich # Ross Young, Chris Jones
use RichMarkovRingFinder v2r8    Rich # Chris Jones
use RichPIDMerge         v2r7    Rich # Chris Jones
use RichRecAlgorithms    v2r16   Rich # Chris Jones
use RichRecMCAlgorithms  v1r3p1  Rich # Chris Jones
use RichRecMonitors      v2r23   Rich # Chris Jones
use RichRecPhotonTools   v1r6    Rich # Chris Jones
use RichRecStereoTools   v1r6    Rich # Chris Jones
use RichRecSys           v3r21   Rich # Chris Jones
use RichRecTemplateRings v1r0    Rich # Sajan Easo
use RichRecTools         v4r9    Rich # Chris Jones

# Velo
use VeloRecMonitors      v1r11   Velo # Malcom John, Eduardo Rodrigues
#use RecSys              v*         -no_auto_imports

#-- HLT packages 
use HltGlobalMonitor            v2r6p2  Hlt
use HltSys		v*	     -no_auto_imports

#-- Phys packages 
use PhysSys		v*	     -no_auto_imports

#-- Online ??
use OnlineSys           v*           -no_auto_imports

#============================================================================
set CORAL_SQLITE_TEMP_STORE_MEMORY yes
#============================================================================


apply_pattern application_path
apply_pattern install_python_modules

# define aliases
alias Moore gaudirun.py

#


# create files needed by online setup -- by default we use 
# the SetupMoore file generated by installing the software,
# but if ONLINE_MOORE is set we overrule this...
#tag ONLINE_OVERRULE_MOORE_SETUP
macro Create_RunMooreOnline_output  "../job/runMooreOnline_EFF.sh"
macro Create_RunMooreOnline_command "python ../scripts/CreateRunMooreOnline_EFF.py $(Create_RunMooreOnline_output)" \
        ONLINE_OVERRULE_MOORE_SETUP "python ../scripts/CreateRunMooreOnline_EFF.py $(Create_RunMooreOnline_output) foobar" 
apply_pattern CallCommand  target=Create_RunMooreOnline

# copy the TCK manifest for the _current_ release to the install area...
macro Install_TCK_Manifest_output  "$(CMTINSTALLAREA)/TCK/manifest"
macro Install_TCK_Manifest_command "python ../scripts/install_TCK_manifest.py $(HLTTCKROOT)/manifest/MOORE_$(version) $(Install_TCK_Manifest_output)"
apply_pattern CallCommand  target=Install_TCK_Manifest


private
  apply_pattern QMTest
end_private
