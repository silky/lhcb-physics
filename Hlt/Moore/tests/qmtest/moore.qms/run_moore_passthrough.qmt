<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>../options/run_moore.py</text></argument>
  <argument name="args"><set>
    <text>-n</text>
    <text>1200</text>
    <text>Commissioning_PassThrough</text>
  </set></argument>
  <argument name="unsupported_platforms"><set><text>win.*</text></set></argument>
  <argument name="validator"><text>
expected_string = &quot;SUCCESS Reading Event record 1101. Record number within stream 3: 800&quot; 
if stdout.find(expected_string) == -1:
    causes.append('missing string')
    result['GaudiTest.expected_string'] = result.Quote(expected_string)

countErrorLines({"FATAL":0,"ERROR":6,"WARNING":1})

#check that all events are actually passed through?
#Parse timing table, and check that there is only one entry for HLT 2 and it sees all events (1200)


timing=[]
timingdict={}
for line in stdout.split('\n'):
    if 'TIMER' not in line or 'Hlt' not in line:
        continue
    line=line.replace('\t',' ')
    line=line.replace('  ',' ')
    line=line[line.find('INFO')+4:]
    line=line.strip().rstrip()
    line=line.split('|')
    if len(line)&lt;5:
        continue
    if not line[0].startswith('Hlt'): 
        continue
    name=line[0].strip().rstrip()
    num=line[4].strip().rstrip()
    timing.append(':'.join([name,line[4]]))
    timingdict[name]=int(num)

if len([t for t in timingdict if t.startswith("Hlt2")])!=1:
    causes.append('Does not look like pass-through')
    result['moore.run_moore_passthrough.passthrough'] = result.Quote('Expected only one Hlt2 entry in timing table, saw '+','.join([t for t in timingdict if t.startswith("Hlt2")]))

if timingdict['HltEndSequence']!=1200:
    causes.append('Does not pass everything')
    result['moore.run_moore_passthrough.passnumber'] = result.Quote('Expected 1200 events, saw '+str(timingdict['HltEndSequence']))

</text></argument>
</extension>

