<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<!--
#######################################################
# SUMMARY OF THIS TEST
# ...................
# Author: rlambert
# Purpose: Run Hlt2 after 1 comparing with the NoTos deferral "sledgehammer"
# Prerequisites: The no tos hlt1and2notos test needs to run already
# Common failure modes, severities and cures: 
#               . SEVERE: Segfault or raised exception, stderr, nonzero return code
#               . MAJOR: additional FATAL/ERROR messages always a major problem. no ERROR messages should ever be printed when running this test.
#               . MINOR: additional WARNING messages, it is unclear how severe these may be, you will need to hunt down the cause and either fix the problem or suppress the warning.
#               . EXPECTED: Hlt2 behaves differently when run stand alone right now, that's a problem waiting to be fixed.
#######################################################
-->
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>gaudirun.py</text></argument>
  <argument name="timeout">
    <integer>1200</integer>
  </argument>
  <argument name="args"><set>
    <text>../options/Moore_Hlt1And2.py</text>
    <text>../options/Moore_NoTosDeferral.py</text>
    <text>../options/default-hlt2-threshold.py</text>
    <text>../options/Moore_Hlt2Only.py</text>
    <text>--option</text>
    <text>from GaudiConf import IOHelper; IOHelper().inputFiles([],clear=True); from Configurables import Moore; Moore().inputFiles = [ 'hlt1_reqhlt1.raw' ]; Moore().EnableTimer="deferral.hlt2after1notos.csv";from Configurables import HltConf ; HltConf().PruneHltANNSvc = False</text>
  </set></argument>
  <argument name="validator"><text>
myname='moore.physics.deferral.hlt2after1notos'

from Moore.QMTest.MooreTests import compareTimingTableFiles

compareTimingTableFiles(myname,result,causes,"deferral.hlt2after1notos.csv","physics.2012.csv","Hlt2")

#count error lines, shouldn't be any warnings or errors, ideally -- except for the three warnings we 
# explicitly look for as reference...
countErrorLines({"FATAL":0,"ERROR":0,"WARNING":3})
findReferenceBlock("""
Hlt1DecReportsDecoder                   WARNING TCK in rawbank seems to be 0 -- blindly ASSUMING that the current HltANNSvc somehow has the same configuration as when the input data was written. Proceed at your own risk, good luck...
Hlt1SelReportsDecoder                   WARNING TCK in rawbank seems to be 0 -- blindly ASSUMING that the current HltANNSvc somehow has the same configuration as when the input data was written. Proceed at your own risk, good luck...
Hlt1SelReportsDecoder                   WARNING TCK in rawbank seems to be 0 -- blindly ASSUMING that the current HltANNSvc somehow has the same configuration as when the input data was written. Proceed at your own risk, good luck...
""", id = "AllowTCKZero" )

</text></argument>
</extension>

