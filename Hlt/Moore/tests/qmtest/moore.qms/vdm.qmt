<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>../options/run_moore.py</text></argument>
  <argument name="args"><set>
    <text>-n</text>
    <text>1200</text>
    <text>VanDerMeerScan_Jul12</text>
  </set></argument>
  <argument name="unsupported_platforms"><set><text>win.*</text></set></argument>
  <argument name="validator"><text>
expected_string = &quot;SUCCESS Reading Event record 1101. Record number within stream 3: 800&quot;
if stdout.find(expected_string) == -1:
    causes.append('missing string')
    result['moore.vdm.expected_string'] = result.Quote(expected_string)

#ideally no errors, but there is always two when opening every Raw file
countErrorLines({"FATAL":0,"ERROR":6,"WARNING":1})

from Moore.QMTest.MooreTests import extractEventsFromTiming
timing,timingdict=extractEventsFromTiming(stdout,'Hlt')

if len([t for t in timingdict if t.startswith("Hlt2")])!=1:
    causes.append('Does not look like pass-through')
    result['moore.vdm.passthrough'] = result.Quote('Expected only one Hlt2 entry in timing table, saw '+','.join([t for t in timingdict if t.startswith("Hlt2")]))

if 'Hlt1BeamGasBeam1' not in timingdict:
    causes.append('Doesnt contain beamgas lines')
    result['moore.vdm.bg'] = result.Quote('No line called Hlt1BeamGasBeam1 in timing table')
elif timingdict['Hlt1BeamGasBeam1']!=1200:
    causes.append('BeamGas does not see all events')
    result['moore.vdm.passnumber'] = result.Quote('Expected 1200 events, saw '+str(timingdict['Hlt1BeamGasBeam1']))


</text></argument>
</extension>

