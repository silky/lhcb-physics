<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>../options/run_moore.py</text></argument>
  <argument name="args"><set>
    <text>-n</text>
    <text>1200</text>
    <text>Commissioning_OTCosmics</text>
  </set></argument>
  <argument name="unsupported_platforms"><set><text>win.*</text></set></argument>
  <argument name="validator"><text>
expected_string = &quot;SUCCESS Reading Event record 1101. Record number within stream 3: 800&quot; 
if stdout.find(expected_string) == -1:
    causes.append('missing string')
    result['moore.cosmics.expected_string'] = result.Quote(expected_string)


countErrorLines({"FATAL":0,"ERROR":0,"WARNING":0})

#check that all events are actually passed through?
#Parse timing table, and check that there is only one entry for HLT 2 and it sees all events (1200)


from LHCbAlgs import TTParser
timingdict=TTParser.event_av_dict("Commissioning_OTCosmics.csv")

if len([t for t in timingdict if t.startswith("Hlt2")])!=1:
    causes.append('Does not look like pass-through')
    result['moore.cosmics.passthrough'] = result.Quote('Expected only one Hlt2 entry in timing table, saw '+','.join([t for t in timingdict if t.startswith("Hlt2")]))

if 'Hlt1CosmicOTPostScaler' not in timingdict:
    causes.append('No OT cosmics selection seen')
elif timingdict['Hlt1CosmicOTPostScaler'][0]!=1200:
    causes.append('OT Cosmic test does not select everything')
    result['moore.cosmics.passnumber'] = result.Quote('Expected 1200 events, saw '+str(timingdict['Hlt1CosmicOTPostScaler'][0]))


</text></argument>
</extension>

