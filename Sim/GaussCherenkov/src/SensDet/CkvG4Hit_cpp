// $Id: $
// Include files 



// local
#include "CkvG4Hit.h"

//-----------------------------------------------------------------------------
// Implementation file for class : CkvG4Hit
//
// 2011-03-18 : Sajan Easo
//-----------------------------------------------------------------------------
G4Allocator<CkvG4Hit> CkvG4HitAllocator;


//=============================================================================
// Standard constructor, initializes variables
//=============================================================================
CkvG4Hit::CkvG4Hit(const CkvG4Hit & right  ) 
  :GaussHitBase(right),
   m_CurModuleNum(right.m_CurModuleNum),
   m_CurHitInPixelGap(right.m_CurHitInPixelGap),
   m_CurPmtNum(right.m_CurPmtNum),
   m_RichG4Hit(right.m_RichG4Hit)
{ }
const CkvG4Hit& CkvG4Hit::operator=(const CkvG4Hit &right)
{
  m_CurModuleNum=right.m_CurModuleNum;
  m_CurHitInPixelGap=right.m_CurHitInPixelGap;
  m_CurPmtNum= right.m_CurPmtNum;
   m_RichG4Hit = right.m_RichG4Hit;
  return *this;
  
}
int CkvG4Hit::operator==(const CkvG4Hit &right) const
{
  //  return 0;
  return((m_RichG4Hit==right.m_RichG4Hit) );

}
void CkvG4Hit::Draw() {
 m_RichG4Hit->Draw();
}
void  CkvG4Hit::DrawPEOrigin() {
  m_RichG4Hit->DrawPEOrigin();
}
void CkvG4Hit::Print() 
{
  G4cout<<" CkvG4Hit PmtModuleNumber" <<  m_CurModuleNum <<G4endl;
  G4cout<<" CkvG4Hit PmtHitInPixelGap " <<m_CurHitInPixelGap <<G4endl;
  G4cout<<" CkvG4Hit current Pmt number "<<m_CurPmtNum<<G4endl;

  m_RichG4Hit ->Print();
}

//=============================================================================
// Destructor
//=============================================================================
CkvG4Hit::~CkvG4Hit() {} 

//=============================================================================

#ifdef GNU_GCC
template class G4Allocator<CkvG4Hit>;
#endif

