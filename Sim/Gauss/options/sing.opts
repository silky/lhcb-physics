// $Id: sing.opts,v 1.4 2002-04-28 19:06:30 witoldp Exp $ 
// ============================================================================
// CVS tag $Name: not supported by cvs2svn $ 
// ============================================================================
// $Log: not supported by cvs2svn $
// Revision 1.3  2002/04/05 16:41:29  witoldp
// uses restructured GeneratorModules
//
// Revision 1.2  2002/03/13 12:56:11  ibelyaev
//  small restructurusation of job-options
// 
// ============================================================================
//  jobOptions to run SingleParticleGun and then feed the output into G4
// ===========================================================================

#include "$STDOPTIONS"

// remove SicbCnv 
ApplicationMgr.ExtSvc            = 
{ "ParticlePropertySvc" ,
  "EventSelector"       };
EventPersistencySvc.CnvServices  = {};  

#include "$STDOPTS/DetDesc.opts"

EventDataSvc.ForceLeaves = true ;

// ============================================================================
// load additional dynamic libraries needed to run GiGa  
// ============================================================================

ApplicationMgr.DLLs += { "GeneratorModules" } ;
ApplicationMgr.DLLs += { "GaudiDb"          } ;
ApplicationMgr.DLLs += { "GaudiAlg"         } ;
ApplicationMgr.DLLs += { "GiGa" , "GiGaCnv" } ;
ApplicationMgr.DLLs       += {"GaudiRootDb"};

// ============================================================================
// declare external services needed for GiGa 
// ============================================================================
ApplicationMgr.ExtSvc += 
{ "ParticlePropertySvc" , 
  "MagneticFieldSvc"    ,   
  "GiGaSvc"             ,          
  "GiGaKineCnvSvc"      ,  
  "GiGaGeomCnvSvc"      ,   
  "GiGaHitsCnvSvc"      } ;


// ============================================================================
// Set output level threshold (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL )
// ============================================================================
MessageSvc.OutputLevel     = 3 ;
XmlPartserSvc.OutputLevel  = 5 ;

// ============================================================================
// Use GiGa Conversion services as event persistency conversion services 
// ============================================================================
EventPersistencySvc.CnvServices += 
{ "GiGaKineCnvSvc" ,  
  "GiGaHitsCnvSvc" } ;
ApplicationMgr.ExtSvc     += {"DbEventCnvSvc/RootEvtCnvSvc"};
ApplicationMgr.OutStream   = {"GenDst"};
EventPersistencySvc.CnvServices += { "RootEvtCnvSvc" };
RootEvtCnvSvc.DbType = "ROOT";
GenDst.ItemList      = {"/Event#999"};
GenDst.Output        = "DATAFILE='G4Dst.root' TYP='ROOT'";


ApplicationMgr.EvtSel    = "NONE" ;

// ============================================================================
// List of top algorithms : 3 separated phases:
// ============================================================================
//      Generator 
//      Simulation 
//      Digitisation
// ============================================================================
ApplicationMgr.TopAlg          =  
{ "Sequencer/Generator"    , 
  "Sequencer/Simulation"   
  //, 
  // "Sequencer/Digitisation" 
} ;

// ============================================================================
// Event generator phase 
// ============================================================================
Generator.Members += 
{ "SingleParticleGun" , 
  "DumpMC"            };

// ============================================================================
// Detector Simulation (tracking os particles through apparatus) phase 
// ============================================================================
Simulation.Members += 
{	"GiGaDataStoreAlgorithm/GiGaStore" ,   // data store configuration
  "GiGaInputStream/Geo"              ,   // load the geometry 
  "GiGaInputStream/Kine"             ,   // load the kinematics 
  "GiGaFlushAlgorithm/GiGaFlush"     };   // flush the event 
//  "GiGaMiscGetEventAlg/GetEvent"     } ; // convert MCPartcile/MCVertices

// ============================================================================
// configuration of GiGa Data Store 
// ============================================================================
GiGaStore.ConversionServices   = 
{ "GiGaKineCnvSvc" , 
  "GiGaHitsCnvSvc" };

// ============================================================================
// configuration of kinematics event data stream 
// ============================================================================
Kine.ConversionSvcName         = "GiGaKineCnvSvc"                 ; 
Kine.DataProviderSvcName       = "EventDataSvc"                   ; 
Kine.StreamItems               = 
{ "/Event/Gen/HepMCEvents" } ;

// ============================================================================
// configuration of geometry data stream 
// ============================================================================
Geo.ExecuteOnce                = true                           ;  
Geo.ConversionSvcName          = "GiGaGeomCnvSvc"               ; 
Geo.DataProviderSvcName        = "DetectorDataSvc"              ; 
Geo.StreamItems               +=  { "/dd/Structure/LHCb/Pipe" } ; 
//Geo.StreamItems               +=  { "/dd/Structure/LHCb/Rich1" } ;
//Geo.StreamItems               +=  { "/dd/Structure/LHCb/Hcal" } ;

// ============================================================================
// Physics List  to be used and its configuration  
// ============================================================================
GiGaSvc.PhysicsList            = "GiGaPhysListEm/EmPhysList" ; 
EmPhysList.Cut                 = 5.0                         ;

// ============================================================================
// Stacking action to be used and its configuration  
// ============================================================================
GiGaSvc.StackingAction         = "GiGaStackActionEmpty/EmptyStack" ;
EmptyStack.OutputLevel         = 3                                 ;

// ============================================================================
// Tracking action to be used and its configuration  
// ============================================================================
GiGaSvc.TrackingAction         =   "GiGaTrackActionSequence/TrackSeq"    ;
TrackSeq.Members               = { "GiGaTrackActionSimple/SimpleTrack" } ;
SimpleTrack.StoreAll           = true                                    ; 
SimpleTrack.StoreByOwnEnergy   = true                                    ; 
//SimpleTrack.OwnEnergyThreshold = 1000.0                                  ; 
// SimpleTrack.StoreByChildEnergy   = true ; 
// SimpleTrack.ChildEnergyThreshold = 50.0 ; 
// SimpleTrack.StoreByOwnType       = true; 
// SimpleTrack.StoredOwnTypes       = { "e+" , "e-" };
// SimpleTrack.StoreByChildType     = true; 
// SimpleTrack.StoredChildTypes     = { "e+"};


// ============================================================================
// Stepping action to be used and its configuration  
// ============================================================================
GiGaSvc.SteppingAction            =   "GiGaStepActionSequence/StepSeq"  ;
StepSeq.Members                   = { "GiGaStepActionDraw/DrawStep"   } ;
DrawStep.OutputLevel              = 6;


// ============================================================================
// Event action to be used and its configuration  
// ============================================================================
GiGaSvc.EventAction               =   "GiGaEventActionSequence/EventSeq"      ;
EventSeq.Members                  = { "GiGaEventActionCommand/EventCommand" } ;
EventSeq.Members                 += { "GiGaEventActionDraw/EventDraw" } ;
EventCommand.OutputLevel          = 1                                         ;
EventCommand.EndOfEventCommands   = 
{ "/vis/scene/add/volume"               , 
  "/vis/scene/add/trajectories"         ,
  "/vis/viewer/update"                  } ;
#ifdef WIN32
EventCommand.BeginOfEventCommands = 
{ "/vis/scene/create"                   , 
  "/vis/sceneHandler/create OIWIN32"    ,
  "/vis/viewer/create"                  ,
  "/vis/scene/add/volume"               , 
  "/vis/scene/add/trajectories"         ,
  "/vis/scene/notifyHandlers   "        ,
  "/vis/viewer/set/culling off"         } ;
#else 
EventCommand.BeginOfEventCommands = 
{ 
  "/vis/scene/create"                   , 
  "/vis/sceneHandler/create VRML1FILE"  ,
  "/vis/sceneHandler/create DAWNFILE"   ,
  "/vis/viewer/create"                  ,
  "/vis/scene/add/volume"               , 
  "/vis/scene/add/trajectories"         ,
  "/vis/scene/notifyHandlers   "        ,
  "/vis/viewer/set/culling off"         
} ;
#endif 

// ============================================================================
// Run Action to be used and its consficgurations  
// ============================================================================
GiGaSvc.RunAction                 =   "GiGaRunActionSequence/RunSeq"      ;
RunSeq.Members                    = 
{ "GiGaRunActionCommand/RunCommand" } ;
RunCommand.OutputLevel            = 2                                     ;
RunCommand.BeginOfRunCommands     = 
{ "/control/saveHistory "           ,
  "/run/verbose 0 "                 ,
  "/tracking/storeTrajectory  1"    ,
  "/tracking/verbose 0" } ;

// ============================================================================
// List of user interface sessions 
// ============================================================================
GiGaSvc.UIsessions           =  { "tcsh" };
// , "Xm" , "Wo" , "GAG", 
//                                   "Xaw"  , "terminal" } ;

// ============================================================================
// Global(world) magnetic field 
// ============================================================================
//GiGaGeomCnvSvc.WorldMagneticField = "GiGaMagFieldGlobal/GlobalField";
//GlobalField.MagneticFieldService = "MagneticFieldSvc" ;
GiGaGeomCnvSvc.WorldMagneticField = "GiGaMagFieldUniform/UniformField";
UniformField.Bx =   0.01 ; 
UniformField.By =   0.0  ; 
UniformField.Bz =   0.     ; 
UniformField.OutputLevel = 1 ;


// ============================================================================
// flag for instantiation and usage of visual manager 
// ============================================================================
GiGaSvc.UseVisManager          = true;


//--------------------------------------------------------------
// Event related parameters
//--------------------------------------------------------------

// Number of events to be processed (default is 10)
ApplicationMgr.EvtMax = 3;
ParticlePropertySvc.ParticlePropertiesFile = "particle.cdf";

//--------------------------------------------------------------
// Algorithms Private Options
//--------------------------------------------------------------

SingleParticleGun.Pt = 50.0;
SingleParticleGun.Phi = 1.;
SingleParticleGun.Eta =3.;

SingleParticleGun.ModePt = 1;
SingleParticleGun.ModeEta =1; 
SingleParticleGun.ModePhi =1;
SingleParticleGun.PdgCode=211;

//==============================================================
//
// End of job options file
//
//##############################################################

