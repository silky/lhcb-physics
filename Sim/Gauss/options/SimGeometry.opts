// $Id: SimGeometry.opts,v 1.9 2006-02-06 13:29:14 gcorti Exp $

/** @file
 *
 *  File containing the standard geometry configuration for
 *  a Gauss job. All the detector is included as well as the
 *  magnetic field.
 *
 *  @author G.Corti
 *  @date 2004-11-18
 */

// Configuration of algorithm "GiGaInputStream/Geo" for
// defining the geometry to be loaded
// Note that default property for GiGaInputStream are for
// Kine so most of them have to be overwritten here.
// In initialize retrieve the GiGaGeo (GiGaCnvSvcBase) to which
// it will delegate the work.
// Execute only for the first event
Geo.ExecuteOnce          = true ;
Geo.ConversionSvcName    = "GiGaGeo"  ;
//Geo.OutputLevel          = 1;
//GiGaGeo.OutputLevel      = 2;
Geo.DataProviderSvcName  = "DetectorDataSvc" ;
// Geometry to be converted in execute method,
// This items will be loaded by the DetectorDataSvc and then
// the convertion service will be asked to make a Geant4 representation
// that will triggers the corresponding converter for each one
ApplicationMgr.DLLs += { "GaussTracker" };
ApplicationMgr.DLLs += { "GaussRICH"    };
ApplicationMgr.DLLs += { "GaussCalo"    };
Geo.StreamItems         += {"/dd/Structure/LHCb/Pipe"};
Geo.StreamItems         += {"/dd/Structure/LHCb/Magnet"};
// Comment out following line to enable misaligneable VELO
Geo.StreamItems         += {"/dd/Structure/LHCb/Velo"};  
// Uncomment following line to enable misaligneable VELO
//#include "$GAUSSOPTS/SimVeloGeometry.opts"
Geo.StreamItems         += {"/dd/Structure/LHCb/Velo2Rich1"};
Geo.StreamItems         += {"/dd/Structure/LHCb/Rich1"};
Geo.StreamItems         += {"/dd/Geometry/Rich1/Rich1Surfaces"};
Geo.StreamItems         += {"/dd/Geometry/Rich1/RichHPDSurfaces"};
Geo.StreamItems         += {"/dd/Structure/LHCb/OT"};
Geo.StreamItems         += {"/dd/Structure/LHCb/IT"};
Geo.StreamItems         += {"/dd/Structure/LHCb/Rich2"};
Geo.StreamItems         += {"/dd/Geometry/Rich2/Rich2Surfaces"};
Geo.StreamItems         += {"/dd/Structure/LHCb/Spd"};
Geo.StreamItems         += {"/dd/Structure/LHCb/Prs"};
Geo.StreamItems         += {"/dd/Structure/LHCb/Ecal"};
Geo.StreamItems         += {"/dd/Structure/LHCb/Hcal"};
#include "$GAUSSCALOROOT/options/Calo.opts"           // Specific configuration
Geo.StreamItems         += {"/dd/Structure/LHCb/Muon"};

// Magnetic field simulation
// "Global Field Manager"
GiGaGeo.FieldManager           = "GiGaFieldMgr/FieldMgr";
GiGaGeo.FieldMgr.Stepper       = "ClassicalRK4";
GiGaGeo.FieldMgr.Global        = true;
GiGaGeo.FieldMgr.MagneticField = "GiGaMagFieldGlobal/LHCbField";
GiGaGeo.FieldMgr.LHCbField.MagneticFieldService = "MagneticFieldSvc";
GiGaGeo.FieldMgr.OutputLevel = 2;
// Uniform field (default Bx=By=Bz=0)
//GiGaGeo.FieldMgr.MagneticField = "GiGaMagFieldUniform";
//GiGaGeo.FieldMgr.GiGaMagFieldUniform.MagneticFieldService = "";

// declare external services needed MAGNETIC FIELD
ApplicationMgr.DLLs   += { "Magnet" };
ApplicationMgr.ExtSvc += { "MagneticFieldSvc"  };
MagneticFieldSvc.FieldMapFile = "$FIELDMAP";
