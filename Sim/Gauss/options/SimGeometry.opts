// $Id: SimGeometry.opts,v 1.22 2006-10-10 13:19:51 gcorti Exp $

/** @file
 *
 *  File containing the standard geometry configuration for
 *  a Gauss job. All the detector is included as well as the
 *  magnetic field.
 *
 *  @author G.Corti
 *  @date 2004-11-18
 */

// Configuration of algorithm "GiGaInputStream/Geo" for
// defining the geometry to be loaded
// Note that default property for GiGaInputStream are for
// Kine so most of them have to be overwritten here.
// In initialize retrieve the GiGaGeo (GiGaCnvSvcBase) to which
// it will delegate the work.
// Execute only for the first event
Geo.ExecuteOnce          = true ;
Geo.ConversionSvcName    = "GiGaGeo"  ;
//Geo.OutputLevel          = 1;
//GiGaGeo.OutputLevel      = 2;
Geo.DataProviderSvcName  = "DetectorDataSvc" ;
// Geometry to be converted in execute method,
// This items will be loaded by the DetectorDataSvc and then
// the convertion service will be asked to make a Geant4 representation
// that will triggers the corresponding converter for each one
ApplicationMgr.DLLs += { "GaussTracker" };
ApplicationMgr.DLLs += { "GaussRICH"    };
ApplicationMgr.DLLs += { "GaussCalo"    };

// Geometry to be simulated
//----------------------------------------------------------------------------
// To set size of World/Universe i.e. the main mother volume (made of Air
// and in which any LHCb detector is positioned)
// Now it is half that is inconsistent with "XmlDDDB"
//GiGaGeo.XsizeOfWorldVolume = 50.0*m;
//GiGaGeo.YsizeOfWorldVolume = 50.0*m;
//GiGaGeo.ZsizeOfWorldVolume = 50.0*m; 

// Geometry to be simulated Detector by detector
//----------------------------------------------------------------------------
Geo.StreamItems      += {"/dd/Structure/LHCb/BeforeMagnetRegion/Velo"};  
// Uncomment following line to enable misaligneable VELO while commenting the
// line above
//#include "$GAUSSOPTS/SimVeloGeometry.opts"
Geo.StreamItems      += {"/dd/Structure/LHCb/BeforeMagnetRegion/Velo2Rich1"};
Geo.StreamItems      += {"/dd/Structure/LHCb/BeforeMagnetRegion/Rich1"};
Geo.StreamItems      += {"/dd/Geometry/BeforeMagnetRegion/Rich1/Rich1Surfaces"};
Geo.StreamItems      += {"/dd/Geometry/BeforeMagnetRegion/Rich1/RichHPDSurfaces"};
Geo.StreamItems      += {"/dd/Structure/LHCb/BeforeMagnetRegion/TT"};
//
Geo.StreamItems      += {"/dd/Structure/LHCb/MagnetRegion/PipeInMagnet"};
Geo.StreamItems      += {"/dd/Structure/LHCb/MagnetRegion/PipeSupportsInMagnet"};
Geo.StreamItems      += {"/dd/Structure/LHCb/MagnetRegion/Magnet"};
//
Geo.StreamItems      += {"/dd/Structure/LHCb/AfterMagnetRegion/T"};
// The line above can be expanded to the following 3 lines 
// Geo.StreamItems      += {"/dd/Structure/LHCb/AfterMagnetRegion/T/IT"};
// Geo.StreamItems      += {"/dd/Structure/LHCb/AfterMagnetRegion/T/OT"};
// Geo.StreamItems      += {"/dd/Structure/LHCb/AfterMagnetRegion/T/PipeInT"};
Geo.StreamItems      += {"/dd/Structure/LHCb/AfterMagnetRegion/Rich2"};
Geo.StreamItems      += {"/dd/Geometry/AfterMagnetRegion/Rich2/Rich2Surfaces"};
Geo.StreamItems      += {"/dd/Structure/LHCb/AfterMagnetRegion/PipeAfterT"};
Geo.StreamItems      += {"/dd/Structure/LHCb/AfterMagnetRegion/PipeSupportsAfterMagnet"};
Geo.StreamItems      += {"/dd/Structure/LHCb/AfterMagnetRegion/PipeBakeoutAfterMagnet"};
//
Geo.StreamItems      += {"/dd/Structure/LHCb/DownstreamRegion/Spd"};
Geo.StreamItems      += {"/dd/Structure/LHCb/DownstreamRegion/Converter"};
Geo.StreamItems      += {"/dd/Structure/LHCb/DownstreamRegion/Prs"};
Geo.StreamItems      += {"/dd/Structure/LHCb/DownstreamRegion/Ecal"};
Geo.StreamItems      += {"/dd/Structure/LHCb/DownstreamRegion/Hcal"};
Geo.StreamItems      += {"/dd/Structure/LHCb/DownstreamRegion/Muon"};
Geo.StreamItems      += {"/dd/Structure/LHCb/DownstreamRegion/PipeDownstream"};
Geo.StreamItems      += {"/dd/Structure/LHCb/DownstreamRegion/PipeSupportsDownstream"};
Geo.StreamItems      += {"/dd/Structure/LHCb/DownstreamRegion/PipeBakeoutDownstream"};
// Specific configuration of sensitive detectors
#include "$GAUSSCALOROOT/options/Calo.opts"

// Magnetic field simulation
// "Global Field Manager"
GiGaGeo.FieldManager           = "GiGaFieldMgr/FieldMgr";
GiGaGeo.FieldMgr.Stepper       = "ClassicalRK4";
GiGaGeo.FieldMgr.Global        = true;
GiGaGeo.FieldMgr.MagneticField = "GiGaMagFieldGlobal/LHCbField";
GiGaGeo.FieldMgr.LHCbField.MagneticFieldService = "MagneticFieldSvc";
// Uniform field (default Bx=By=Bz=0)
//GiGaGeo.FieldMgr.MagneticField = "GiGaMagFieldUniform";
//GiGaGeo.FieldMgr.GiGaMagFieldUniform.MagneticFieldService = "";

// Declare external services needed MAGNETIC FIELD
ApplicationMgr.DLLs   += { "Magnet" };
ApplicationMgr.ExtSvc += { "MagneticFieldSvc"  };
MagneticFieldSvc.FieldMapFile = "$FIELDMAP";
