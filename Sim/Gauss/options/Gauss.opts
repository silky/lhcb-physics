// $Id: Gauss.opts,v 1.55 2004-11-22 16:24:49 ranjard Exp $ 

// =========== necessary setup and steps for any Gauss executable =========== 
#include "$GAUSSOPTS/Common.opts"

// ======================= specific to this job =============================

// to run event generator, GenStandAlone.opts or ParticleGun.opts can be
// used instead of Generator.opts
ApplicationMgr.TopAlg += { "Sequencer/Generator"};
#include "$GAUSSOPTS/Generator.opts"
//#include "$GAUSSOPTS/ParticleGun.opts"

// to run Detector simulation, remove it if GenStandAlone
ApplicationMgr.TopAlg += { "Sequencer/Simulation"};
#include "$GAUSSOPTS/Simulation.opts"

// to run full monitors
//ApplicationMgr.TopAlg += { "Sequencer/Monitor" };
#include "$GAUSSOPTS/Monitor.opts"

// write an output file
ApplicationMgr.OutStream +=  { "GaussTape" };
GaussTape.Output = "DATAFILE='PFN:Gauss.sim' TYP='POOL_ROOTTREE' OPT='REC'";
PoolDbCacheSvc.Catalog = { "xmlcatalog_file:NewCatalog.xml" };

// initialize run, event, max event, output level
ApplicationMgr.EvtMax     = 10;
Gauss.FirstEventNumber    = 1;
Gauss.RunNumber           = 1;
MessageSvc.OutputLevel    = 3;

// Lenght of message to have longer Algorihtm/Tool identifier in printout
//MessageSvc.Format = "% F%40W%S%7W%R%T %0W%M";
 
// to simulate <evttype> put a line similar to the following
#include "$DECFILESROOT/options/13296200.opts"  // Bd_JpsiKS,mm
//#include "$DECFILESROOT/options/10000000.opts"  // Generic b events
//#include "$DECFILESROOT/options/30000000.opts"  // Min Bias

