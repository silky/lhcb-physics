// $Id: Gauss.opts,v 1.38 2004-01-26 16:44:46 ranjard Exp $ 

#units "$STDOPTS/units.opts"

AuditorSvc.Auditors = { "ChronoAuditor" };

ApplicationMgr.ExtSvc            = 
{ "ParticlePropertySvc" ,
  "EventSelector"       };
EventPersistencySvc.CnvServices  = {};  

ApplicationMgr.DLLs  = { "GaudiAud"};
ApplicationMgr.DLLs += { "GaudiAlg"} ;
ApplicationMgr.DLLs += { "GaussTools"} ;

RndmGenSvc.Engine.SetSingleton = true;

ApplicationMgr.HistogramPersistency = "NONE";

// allow automatic creation of subdirectories in Event Transient Store 
EventDataSvc.ForceLeaves = true ;

ParticlePropertySvc.ParticlePropertiesFile = "$PARAMFILESROOT/data/particle.cdf" ;

// sequence of algorithms 
ApplicationMgr.TopAlg          =  
{ "GaussInitialisation/GaussInit",
  "Sequencer/Generator", 
  "Sequencer/Simulation"
};

// General global options  
MessageSvc.OutputLevel    = 3; 

// read job options for various steps
#include "$GAUSSOPTS/Generator.opts"
#include "$GAUSSOPTS/Simulation.opts"

// write an output file in ROOT format
//#include "$GAUSSOPTS/GaussRootIO.opts"
//GaussTape.Output = "DATAFILE='$W1/GaussRoot.oosim' TYP='ROOT' OPT='RECREATE'";

// write an output file in POOL format
#include "$GAUSSOPTS/GaussPoolIO.opts"
GaussTape.Output = "DATAFILE='PFN:$W1/GaussPool.sim' TYP='POOL_ROOTTREE' OPT='REC'";
PoolDbCacheSvc.OutputCatalog = "xmlcatalog_file:$W1/GaussPool_catalog.xml";
PoolDbCacheSvc.OutputLevel = 0; // full debug of PoolIO


// skip some messages from Xml 
MessageSvc.setWarning += { "XmlGenericCnv" };

ApplicationMgr.EvtSel     = "NONE" ;

// number of events to be processed, first event number and run number
ApplicationMgr.EvtMax     = 5;
GaussInit.FirstEventNumber = 1;
GaussInit.RunNumber = 1;


// Modify Message Format to print algorithm name with 40 characters
// MessageSvc.Format = "% F%40W%S%7W%R%T %0W%M";
