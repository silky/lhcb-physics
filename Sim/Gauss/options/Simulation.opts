// $Id: Simulation.opts,v 1.20 2002-11-08 11:26:42 witoldp Exp $ 
// ============================================================================

ApplicationMgr.DLLs += 
{ "GiGa"         , 
  "GiGaCnv"      , 
  "GaussTools"   ,
  "Magnet"        } ;

ApplicationMgr.ExtSvc += 
{ "GiGaSvc"         ,          
  "GiGaKineCnvSvc"  ,  
  "GiGaGeomCnvSvc"  ,   
  "GiGaHitsCnvSvc"  } ;

EventPersistencySvc.CnvServices += 
{ "GiGaKineCnvSvc" ,  
  "GiGaHitsCnvSvc" } ;

Simulation.Members += 
{	"GiGaDataStoreAlgorithm/GiGaStore" ,   // data store configuration
  "GiGaInputStream/Geo"              ,   // load the geometry 
  "GiGaInputStream/Kine"             ,   // load the kinematics 
//  "GiGaFlushAlgorithm/GiGaFlush"     }; //,   // flush the event 
  "GiGaMiscGetEventAlg/GetEvent"     ,   // convert MCParticles/MCVertices
  "GetGiGaHitsAlg/GetHits"           };  // convert MCHits

// configuration of GiGa Data Store 
GiGaStore.ConversionServices   = 
{ "GiGaKineCnvSvc" , 
  "GiGaHitsCnvSvc" };

// configuration of kinematics event "Kine" data stream 
Kine.ConversionSvcName         = "GiGaKineCnvSvc" ; 
Kine.DataProviderSvcName       = "EventDataSvc"   ; 
Kine.StreamItems              += 
{  "/Event/Gen/HepMCEvents" 
// uncomment the line below if you want to use EvGen
//  ,"/Event/Gen/Vertices"   
};

// configuration of geometry "Geo" data stream

DetectorDataSvc.DetDbLocation = "$XMLDDDBROOT/DDDB/v249r0.xml";
 
Geo.ExecuteOnce          = true ;  
Geo.ConversionSvcName    = "GiGaGeomCnvSvc"  ; 
Geo.DataProviderSvcName  = "DetectorDataSvc" ; 

Geo.StreamItems         += { "/dd/Structure/LHCb/Pipe"   } ; 
Geo.StreamItems         += { "/dd/Structure/LHCb/Velo"  } ; 
//Geo.StreamItems         += { "/dd/Structure/LHCb/Velo2Rich1"};
Geo.StreamItems         += { "/dd/Structure/LHCb/Rich1"   } ; 
Geo.StreamItems         += { "/dd/Structure/LHCb/Rich2"   } ; 
Geo.StreamItems         += { "/dd/Geometry/Rich1/Rich1Surfaces" };
Geo.StreamItems         += { "/dd/Geometry/Rich1/RichHPDSurfaces" };
Geo.StreamItems         += { "/dd/Structure/LHCb/Magnet" } ; 
Geo.StreamItems         += { "/dd/Structure/LHCb/Tracker"   } ; 
Geo.StreamItems         += { "/dd/Structure/LHCb/Muon"  };
//Geo.StreamItems         += { "/dd/Structure/LHCb/Hcal"  };
//Geo.StreamItems         += { "/dd/Structure/LHCb/Ecal"  };
//Geo.StreamItems         += { "/dd/Structure/LHCb/Spd"  };
//Geo.StreamItems         += { "/dd/Structure/LHCb/Prs"  };

// Physics List  to be used and its configuration  
GiGaSvc.PhysicsList            = "GiGaPhysListModular/ModularPL";
GiGaSvc.ModularPL.Cut           = 0.7;

GiGaSvc.ModularPL.PhysicsConstructors += {"GeneralPhysics"};
GiGaSvc.ModularPL.PhysicsConstructors += {"EM_GNPhysics"};
GiGaSvc.ModularPL.PhysicsConstructors += {"MuonPhysics"};
GiGaSvc.ModularPL.PhysicsConstructors += {"HadronPhysicsLHEP_GN"};
GiGaSvc.ModularPL.PhysicsConstructors += {"IonPhysics"};
//GiGaSvc.ModularPL.PhysicsConstructors += {"GiGaPhysConstructorOp"};

// Stacking action to be used and its configuration  
GiGaSvc.StackingAction         = "GiGaStackActionEmpty/EmptyStack" ;

// Tracking action to be used and its configuration  
GiGaSvc.TrackingAction         =   "GiGaTrackActionSequence/TrackSeq"    ;
GiGaSvc.TrackSeq.Members      += { "GiGaTrackActionSimple/SimpleTrack" } ;

GiGaSvc.SimpleTrack.StoreAll  = false; 
GiGaSvc.SimpleTrack.StorePrimaries = true;
GiGaSvc.SimpleTrack.StoreMarkedTracks = false;
GiGaSvc.SimpleTrack.StoreHitTracks = false; 
GiGaSvc.SimpleTrack.StoreByOwnEnergy   = true; 
GiGaSvc.SimpleTrack.OwnEnergyThreshold = 1000.0     ;        
// GiGaSvc.SimpleTrack.StoreByChildEnergy   = true ; 
// GiGaSvc.SimpleTrack.ChildEnergyThreshold = 50.0 ; 
// GiGaSvc.SimpleTrack.StoreByOwnType       = true; 
// GiGaSvc.SimpleTrack.StoredOwnTypes       = { "e+" , "e-" };
// GiGaSvc.SimpleTrack.StoreByChildType     = true; 
// GiGaSvc.SimpleTrack.StoredChildTypes     = { "e+"};

// Stepping action to be used and its configuration  
GiGaSvc.SteppingAction               =   "GiGaStepActionSequence/StepSeq"  ;
GiGaSvc.StepSeq.Members             += { "GaussStepAction/GaussStep" } ;

// Event action to be used and its configuration  
GiGaSvc.EventAction           =   "GiGaEventActionSequence/EventSeq"      ;
GiGaSvc.EventSeq.Members     += { "GiGaEventActionCommand/EventCommand" } ;

// Run Action to be used and its configurations  
GiGaSvc.RunAction                 =   "GiGaRunActionSequence/RunSeq"      ;
GiGaSvc.RunSeq.Members           += { "GiGaRunActionCommand/RunCommand" } ;
GiGaSvc.RunCommand.BeginOfRunCommands     = 
{ "/control/saveHistory "           ,
  "/run/verbose 2 "               ,
  "/vis/verbose -10 "               ,
  "/tracking/verbose 0"            ,
  "/tracking/storeTrajectory  1"    } ;

// List of user interface sessions (with priorities)

// GiGaSvc.UIsessions =  { "tcsh" , "Xm" , "Wo" , "GAG", "Xaw" , "terminal" } ;

//   "Global Magnetifc field" (usisng Magnetic Field Service)
GiGaGeomCnvSvc.WorldMagneticField = "GiGaMagFieldGlobal/GlobalField";
GiGaGeomCnvSvc.GlobalField.MagneticFieldService = "MagneticFieldSvc" ;
//   "Uniform Magnetifc field" 
//GiGaGeomCnvSvc.WorldMagneticField = "GiGaMagFieldUniform/UniformField";
//GiGaGeomCnvSvc.UniformField.Bx          = 0.5     ; 
//GiGaGeomCnvSvc.UniformField.By          = 0.5  ; 
//GiGaGeomCnvSvc.UniformField.Bz          = 0.5     ; 
// GiGaGeomCnvSvc.UniformField.OutputLevel = 1      ;

// Material of the World Volume
// GiGaGeomCnvSvc.WorldMaterial = "/dd/Materials/Vacuum";

// Material Budget  

// GiGaGeomCnvSvc.GlobalSensitivity  = "GiGaSensDetBudget/Budget" ;
// GiGaGeomCnvSvc.Budget.OutputLevel = 1 ;

// sensdet paths
GiGaGeomCnvSvc.ITSDet.DetectorPath = "/Tracker/IT";
GiGaGeomCnvsvc.VeloSDet.DetectorPath = "/Velo";
GiGaGeomCnvSvc.OTSDet.DetectorPath= "/Tracker/OT";

