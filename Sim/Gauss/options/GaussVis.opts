// $Id: GaussVis.opts,v 1.4 2004-01-14 13:21:05 ranjard Exp $ 
// ============================================================================
// CVS tag $Name: not supported by cvs2svn $
// ============================================================================
// $Log: not supported by cvs2svn $
// Revision 1.3  2003/06/18 11:39:07  witoldp
// updated joboptions
//
// Revision 1.2  2003/03/14 17:32:02  ranjard
// v9r1 - update options for visualization
//
// Revision 1.1  2003/02/17 15:19:12  witoldp
// new release
// 
// ============================================================================

/** @file 
 *  The base configuration file to run Gauss exceutable with 
 *  visualiation stuff
 *
 *  @author Vanya BELYAEV Ivan.Belyaev@itep.ru
 *  @date 2003-02-11
 */

#include "$GAUSSOPTS/Gauss.opts"

ApplicationMgr.DLLs += { "GiGaVisUI" } ;

GiGa.VisManager = "GiGaVisManager/GiGaVis" ;
//GiGa.UIsession  = "GiGaUIsession/GiGaUI"   ;

GiGa.StepSeq.Members  += { "GiGaStepActionDraw/DrawStep"} ;

//GiGa.EventSeq.Members += { "GiGaEventActionDraw/DrawEvent"} ;
GiGa.EventSeq.Members += { "GiGaEventActionCommand/VisEvtCmd"} ;
GiGa.EventSeq.OutputLevel = 1 ;

GiGa.EventSeq.VisEvtCmd.EndOfEventCommands = 
  { "/vis/scene/add/volume"               , 
    "/vis/scene/add/trajectories"         ,
    "/vis/viewer/update"                  } ;
#ifdef WIN32
GiGa.EventSeq.VisEvtCmd.BeginOfEventCommands = 
  { "/vis/scene/create"                   , 
    "/vis/sceneHandler/create OIWIN32"    ,
    "/vis/viewer/create"                  ,
    "/vis/scene/add/volume"               , 
    "/vis/scene/add/trajectories"         ,
    "/vis/scene/notifyHandlers   "        } ;
#else 
GiGa.EventSeq.VisEvtCmd.BeginOfEventCommands = 
  { "/vis/scene/create"                   , 
    "/vis/sceneHandler/create DAWNFILE"   ,
    "/vis/viewer/create"                  ,
    "/vis/viewer/set/viewpointThetaPhi -90 -90",
    "/vis/scene/add/volume"               , 
    "/vis/scene/add/trajectories"         ,
    "/vis/scene/notifyHandlers   "        } ;
#endif 


// ============================================================================
// The END 
// ============================================================================

