<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<!--
#######################################################
# SUMMARY OF THIS TEST
# ...................
# Author: rlambert
# Purpose: Check that Moroe can in principle rerun on top of some stripping 20p2 like DST
# Prerequisites: None
# Common failure modes, severities and cures: 
#               . SEVERE: Segfault or raised exception, stderr, nonzero return code
#               . MAJOR: additional FATAL/ERROR messages always a major problem. no ERROR messages should ever be printed when running this test.
#               . MINOR: additional WARNING messages, it is unclear how severe these may be, you will need to hunt down the cause and either fix the problem or suppress the warning.
#               . EXPECTED: At the moment this test often fails due to timeout or some abort thrown in finalize.
#######################################################
-->
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>gaudirun.py</text></argument>
  <argument name="args"><set>
    <text>../options/readStrip20Data.py</text>
    <text>../options/default-threshold.py</text>
    <text>--option</text>
    <text>from PRConfig import TestFileDB; from Configurables import Moore; TestFileDB.test_file_db['S20r0p2_stripped_test'].run(configurable=Moore(),withDB=True); Moore().EvtMax=100; Moore().RemoveInputHltRawBanks = True; from Configurables import DecodeRawEvent; DecodeRawEvent().OverrideInputs=2.0;</text>
  </set></argument>
  <argument name="validator"><text>
countErrorLines({"FATAL":0,"ERROR":0,"WARNING":0})
</text></argument>
</extension>

