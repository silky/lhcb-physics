<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<!--
#######################################################
# SUMMARY OF THIS TEST
# ...................
# Author: rlambert
# Purpose: To test Moore with the simplest possible threshold, PassThrough
# Prerequisites: None
# Common failure modes, severities and cures: 
#               . SEVERE: Segfault or raised exception, stderr, nonzero return code
#               . MAJOR: additional FATAL/ERROR messages always a major problem. no ERROR messages should ever be printed when running this test.
#               . MINOR: additional WARNING messages, it is unclear how severe these may be, you will need to hunt down the cause and either fix the problem or suppress the warning.
#               . MAJOR: This checks the timing table to verify that the events are passed through, so it had better see all events
#######################################################
-->
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>../options/run_moore.py</text></argument>
  <argument name="args"><set>
    <text>-n</text>
    <text>1200</text>
    <text>Commissioning_PassThrough</text>
  </set></argument>
  <argument name="unsupported_platforms"><set><text>win.*</text></set></argument>
  <argument name="validator"><text>
expected_string = &quot;SUCCESS Reading Event record 1101. Record number within stream 3: 800&quot; 
if stdout.find(expected_string) == -1:
    causes.append('missing string')
    result['moore.passthrough.expected_string'] = result.Quote(expected_string)

countErrorLines({"FATAL":0,"ERROR":0,"WARNING":0})

#check that all events are actually passed through?
#Parse timing table, and check that there are no entries for HLT 2 and it sees all events (1200)

from LHCbAlgs import TTParser
timingdict=TTParser.event_av_dict("Commissioning_PassThrough.csv")

if len([t for t in timingdict if t.startswith("Hlt2")])!=0:
    causes.append('Does not look like pass-through')
    result['moore.passthrough.passthrough'] = result.Quote('Expected no Hlt2 entries in timing table, saw '+','.join([t for t in timingdict if t.startswith("Hlt2")]))

if timingdict['HltEndSequence'][0]!=1200:
    causes.append('Does not pass everything')
    result['moore.passthrough.passnumber'] = result.Quote('Expected 1200 events, saw '+str(timingdict['HltEndSequence']))

</text></argument>
</extension>

