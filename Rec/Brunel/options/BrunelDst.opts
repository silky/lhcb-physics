// This file sets up the Brunel DST content
// ----------------------------------------
ApplicationMgr.DLLs += { "GaudiDb", "GaudiRootDb", "DbCnv" };

// Activate the conversion service 
ApplicationMgr.ExtSvc += { "DbEventCnvSvc/RootEvtCnvSvc" };
// Declare the persistency type for the conversion service 
RootEvtCnvSvc.DbType = "ROOT" ;
// Declare the conversion service to the Persistency Service 
EventPersistencySvc.CnvServices += { "RootEvtCnvSvc" };

// Instantiate Brunel phase to filter containers and create relations
ApplicationMgr.TopAlg += { "BrunelPhase/BrunelOutput" };
BrunelOutput.DetectorList = { "Relations", "Filters" };

// Relations phase is a place holder for creating any relations not already
// created in the monitoring

// Filter algorithms
BrunelOutputFiltersSeq.Members += { "CaloDigitsFilterAlg/PrsFilter" };
BrunelOutputFiltersSeq.Members += { "CaloDigitsFilterAlg/SpdFilter" };
BrunelOutputFiltersSeq.Members += { "CaloDigitsFilterAlg/EcalFilter" };
BrunelOutputFiltersSeq.Members += { "MuonDSTPrepare" };

//ApplicationMgr.DLLs += { "BrunelAlgs" };
//BrunelOutputFiltersSeq.Members += { "MCParticleFilter" };
//MCParticleFilter.OutputLevel = 2;

// Define DST content
ApplicationMgr.OutStream += { "BrunelDstWriter" };
BrunelDstWriter.OptItemList =
{
  "/Event/Prev/Header#1"
, "/Event/PrevPrev/Header#1"
, "/Event/Next/Header#1"
}; 
BrunelDstWriter.ItemList = 
{
  "/Event#1"
, "/Event/Header#1"
, "/Event/Gen#1"
, "/Event/Gen/Header#1"
, "/Event/Gen/Collisions#1"
, "/Event/MC#1"
, "/Event/MC/Particles#1"  // To be filtered
, "/Event/MC/Vertices#1"   // To be filtered
, "/Event/Trig#1"
, "/Event/Trig/L0#1"
, "/Event/Trig/L0/Calo#1"
, "/Event/Trig/L0/Muon#1"
, "/Event/Trig/L0/PuVeto#1"
, "/Event/Trig/L0/Decision#1" 
, "/Event/Trig/L1#1"
, "/Event/Trig/L1/Tracks2d#1"
, "/Event/Trig/L1/Tracks3d#1"
, "/Event/Trig/L1/Vertices2d#1"
  // L1 Clusters and MCTruth may be needed if there are no truth associators
, "/Event/Raw#1"
, "/Event/Raw/Velo#1"
, "/Event/Raw/Velo/Clusters#1" // To be filtered
, "/Event/Raw/Rich#1"
, "/Event/Raw/Rich/Digits#1"
, "/Event/Raw/Spd#1"
, "/Event/Raw/Spd/Digits#1"  // Kept only if related to CaloHypos
, "/Event/Raw/Prs#1"
, "/Event/Raw/Prs/Digits#1"  // Kept only if related to CaloHypos
, "/Event/Raw/Ecal#1"
, "/Event/Raw/Ecal/Digits#1" // Kept only if "seeds" for stored clusters
, "/Event/Rec#1"
, "/Event/Rec/IT#1"
, "/Event/Rec/IT/Summary#1"
, "/Event/Rec/IT/Clusters#1"  // To be filtered
, "/Event/Rec/OT#1"
, "/Event/Rec/OT/Clusters#1"  // To be filtered
, "/Event/Rec/Tr#1"
, "/Event/Rec/Tr/Best#1" // Currently the forward tracks, from StoreTrack
  //, "/Event/Rec/Tr/Forward#1"
  //, "/Event/Rec/Tr/Seed#1"
  //, "/Event/Rec/Tr/Match#1"
, "/Event/Rec/Tr/ITClusters#1"
, "/Event/Rec/Tr/OTClusters#1"
, "/Event/Rec/Tr/VeloClusters#1"
, "/Event/Rec/Tr/StatesP#1"
, "/Event/Rec/Rich#1"
, "/Event/Rec/Rich/PIDs#1"
, "/Event/Rec/Calo#1"
, "/Event/Rec/Calo/EcalCelAutoClusters#1"
, "/Event/Rec/Calo/Photons#1"
, "/Event/Rec/Calo/Electrons#1"
, "/Event/Rec/Calo/MergedPi0s#1"
, "/Event/Rec/Calo/SplitPhotons#1"
, "/Event/Rec/Calo/SplitClusters#1" 
, "/Event/Rec/Calo/PhotonMatch#1"
, "/Event/Rec/Calo/ElectronMatch#1"
, "/Event/Rec/Calo/BremMatch#1"
, "/Event/Rec/Muon#1"
, "/Event/Rec/Muon/M1#1"
, "/Event/Rec/Muon/M2#1"
, "/Event/Rec/Muon/M3#1"
, "/Event/Rec/Muon/M4#1"
, "/Event/Rec/Muon/M5#1"
, "/Event/Rec/Muon/M1/Coords#1" // Filtered (only if used by MuonID)
, "/Event/Rec/Muon/M2/Coords#1" // Filtered (only if used by MuonID)
, "/Event/Rec/Muon/M3/Coords#1" // Filtered (only if used by MuonID)
, "/Event/Rec/Muon/M4/Coords#1" // Filtered (only if used by MuonID)
, "/Event/Rec/Muon/M5/Coords#1" // Filtered (only if used by MuonID)
, "/Event/Rec/Muon/MuonID#1"
, "/Event/Rec/Relations#1"
, "/Event/Rec/Relations/ITClusters2MCParticles#1" // To be filtered
, "/Event/Rec/Relations/OTClusters2MCParticles#1" // To be filtered
, "/Event/Rec/Relations/VeloClusters2MCParticles#1" // To be filtered
, "/Event/Rec/Relations/CaloClusters2MCParticles#1"
  // MuonCoords2MCParticles (needed by L0 study)
, "/Event/Rec/Relations/TrStoredTracks#1" // add 2MCP to name!
  //, "/Event/Rec/Relations/FwTrack2MCP#1"
  //, "/Event/Rec/Relations/SeedTrack2MCP#1"
  //, "/Event/Rec/Relations/VeloFw2MCP#1"
  //, "/Event/Rec/Relations/VeloTr2MCP#1"
  // L0 truth
  // L1 truth
};
