// Default Brunel job Options.
//
// This file is included by the LHCBDBASE specific options files.
//
// This file defines, sequences and configures the algorithms to be executed
// You only need to modify it if you want to add or remove algorithms
// !! Do not modify position or order of included files !!
//==============================================================
#include "$STDOPTIONS"

ApplicationMgr.DLLs += { "BrunelAlgs", "GaudiAlg" };
EventDataSvc.ForceLeaves = true;
EventDataSvc.RootCLID    =    1;

//--------------------------------------------------------------
// Brunel Phases to be executed
//--------------------------------------------------------------
ApplicationMgr.TopAlg += { "BrunelSicbInit",
                           "BrunelInitialisation",
                           "ProcessPhase/BrunelDigi",
                           "ProcessPhase/BrunelTrigger",
                           "ProcessPhase/BrunelReco",
                           "BrunelFinalisation" };
ApplicationMgr.TopAlg += { "ProcessPhase/BrunelMoni" }; 
#include "$BRUNELOPTS/BrunelMoni.opts"
//--------------------------------------------------------------
// Detectors to be processed in each phase
//--------------------------------------------------------------
BrunelDigi.DetectorList  = { "SpillOver" };
BrunelDigi.DetectorList += { "VELO" , "IT", "OT" , "RICH" , "CALO", "MUON" };
BrunelTrigger.DetectorList = { "TRIGGER" };
BrunelReco.DetectorList  = {"VELO","OT","IT","L1","Tr","RICH","CALO","MUON" };
BrunelReco.DetectorList += { "SICBRICH" }; // Old SICB Rich processing
BrunelReco.DetectorList += { "V0" };
BrunelReco.DetectorList += { "Timing" };

//--------------------------------------------------------------
// Geometry and magnetic field
//--------------------------------------------------------------
#include "$STDOPTS/DetDesc.opts"
ApplicationMgr.DLLs += { "CaloDetXmlCnv" };
ApplicationMgr.DLLs += { "RichDet" };
ApplicationMgr.DLLs += { "MuonDet" };
ApplicationMgr.DLLs += { "OTDet" };
ApplicationMgr.DLLs += { "VeloDet" };
ApplicationMgr.DLLs += { "Magnet" };
ApplicationMgr.ExtSvc += { "MagneticFieldSvc" };

//--------------------------------------------------------------
// Sicb converters
//--------------------------------------------------------------
ApplicationMgr.DLLs += { "CaloSicbCnv" };
ApplicationMgr.DLLs += { "RiSicbGeom", "RiSicbCnv" };
ApplicationMgr.DLLs += { "MuonSicbCnv" };
ApplicationMgr.DLLs += { "VSicbCnv" };

//--------------------------------------------------------------
// Subdetector algorithms
//--------------------------------------------------------------
// L0 trigger
#include "$L0CALOROOT/options/Brunel.opts"
#include "$L0MUONROOT/options/Brunel.opts"
#include "$PUVETOROOT/options/Brunel.opts"
#include "$L0DUROOT/options/Brunel.opts"
#include "$MUONTOOLSROOT/options/MuonTools.opts"

// L1 trigger
ApplicationMgr.DLLs += { "L1VeloTrack" };
BrunelTriggerTRIGGERSeq.Members += { "L1VeloTrackAlg" };
BrunelTriggerTRIGGERSeq.Members += { "ITDigitToL1", "OTDigitToL1" };
ApplicationMgr.DLLs += { "L1Decision" };
BrunelRecoL1Seq.Members += { "Level1" };

// Trigger truth relation tables (used by monitoring and for DST)
BrunelTriggerTRIGGERSeq.Members += { "L0CaloToMCParticleAsct" };
BrunelTriggerTRIGGERSeq.Members += { "L0CaloToMCParticleAsct/L0CaloFullTruth"};
L0CaloFullTruth.InputContainer = "Trig/L0/FullCalo";
L0CaloFullTruth.OutputTable    = "Rec/Relations/L0CaloFullCandidates";

BrunelTriggerTRIGGERSeq.Members += { "L1Track2dTruth" };
BrunelTriggerTRIGGERSeq.Members += { "L1Track3dTruth" };

// Calorimeter digitisation and reconstruction
ApplicationMgr.DLLs += { "CaloReco"      , 
                         "CaloPIDs"     ,
                         "CaloDigit"     ,
                         "CaloEvent"     };
#include "$CALODIGITROOT/options/Brunel.opts"
#include "$CALORECOOPTS/Brunel.opts"
#include "$CALORECOOPTS/Reco.opts"
#include "$CALORECOOPTS/Filters.opts"
#include "$CALOPIDSOPTS/Brunel.opts"
#include "$CALOASSOCIATORSOPTS/Brunel.opts"

// Rich Fortran digitisation and OO digits creator 
BrunelDigiRICHSeq.Members += { "RichMCRadHitsToSicbCnv" };
BrunelDigiRICHSeq.Members += { "RichMCPhotoHitsToSicbCnv" };
BrunelDigiRICHSeq.Members += { "BrunelDigiRICH", "RichMCDigitToDigitAlg" };

// Muon digitisation
ApplicationMgr.DLLs += { "MuonAlgs", "MuonBackground" };
#include "$MUONBACKGROUNDROOT/options/Brunel.opts"
BrunelDigiMUONSeq.Members += { "MuonBackground" };
BrunelDigiMUONSeq.Members += { "MuonDigitization" };

// Inner tracker digitisation and reconstruction (clustering)
#include "$ITALGORITHMSROOT/options/Brunel.opts"
ITClusterCreator.clusterSignal2Noise = {3.2,3.2,3.2,3.2,3.2};

// Outer tracker digitisation and reconstruction (clustering)
ApplicationMgr.DLLs   += { "OTAlgorithms" };
#include "$OTALGORITHMSROOT/options/otDigi.opts"
BrunelDigiOTSeq.Members += { "MCOTDepositCreator",
                             "MCOTDigitCreator",
                             "OTDigitCreator" };
#include "$OTALGORITHMSROOT/options/otRec.opts"
BrunelRecoOTSeq.Members += { "OTClusterCreator" };

// Velo digitisation and clustering (also for PuVeto and trigger)
ApplicationMgr.DLLs += { "VeloAlgorithms" };
BrunelDigiVELOSeq.Members += { "VeloSim" };
BrunelDigiVELOSeq.Members += { "VeloDataProcessor" };
BrunelDigiVELOSeq.Members += { "VeloClusterMaker" };
BrunelDigiVELOSeq.Members += { "VeloFEToL1" };
// 45 degree sectors
DeVelo.Design = 1;

// Velo Tracking
ApplicationMgr.DLLs += { "VeloTrack" };
BrunelRecoVELOSeq.Members  = { "VeloTrackAlg" };
VeloTrackAlg.AbortNumTrack = 300;

// Forward tracking
ApplicationMgr.DLLs += { "LongTrack", "TrFitter", "TrExtrapolator" };
ApplicationMgr.ExtSvc += { "TransportSvc" };
BrunelRecoTrSeq.Members += { "FindLongTrack" };
BrunelRecoTrSeq.Members += { "TrEventTracksFitter/FitFw" };
FitFw.TrackContainer = "Rec/FitTrack/Forward";
#include "$LONGTRACKROOT/options/Brunel.opts"

// Seeding
ApplicationMgr.DLLs += { "Seeding" }; 
BrunelRecoTrSeq.Members += { "TrSeedEvent/seedEvent",
                             "TrEventTracksFitter/fitSeed" };
#include "$SEEDINGROOT/options/Brunel.opts"

seedEvent.FilterCluster = true; // Enable filtering of T clusters
ToolSvc.ClusterFilter.Containers = { "Rec/FitTrack/Forward" };

// Velo Matching
ApplicationMgr.DLLs += { "TrMatching" }; 
BrunelRecoTrSeq.Members += { "TrMatchVeloSeed/matchVeloSeed",
                             "TrEventTracksFitter/reFit" };
matchVeloSeed.addTTClusters = false;
reFit.TrackContainer = "Rec/FitTrack/Match";

// Upstream tracking
ApplicationMgr.DLLs += { "UpstreamPR" };
#include "$UPSTREAMPRROOT/options/Brunel.opts"

// Clone killer and converter to TrStoredTrack
ApplicationMgr.DLLs += { "TrCleanEx" };
BrunelRecoTrSeq.Members += { "TrTrackCloneKiller" };

// VeloTT tracking
ApplicationMgr.DLLs += { "VeloTT" };
BrunelRecoTrSeq.Members += { "VeloTTFind" };
#include "$VELOTTROOT/options/Brunel.opts"
BrunelRecoTrSeq.Members += { "TrPrepareVelo" };

BrunelRecoTrSeq.Members += { "TrFit2StoredTrackCnv/StoreBest" };
#include "$TRCLEANEXROOT/options/Brunel.opts"
TrTrackCloneKiller.flagMode = true;

// Old Rich Fortran reconstruction
BrunelRecoRICHSeq.Members += { "TrToRichTrackAlg", "RichTrackToSicbCnv" };
BrunelRecoRICHSeq.Members += { "BrunelRecoRICH" };
BrunelRecoRICHSeq.Members += { "RichDSTPrepare" };
TrToRichTrackAlg.EnableFiltering = "true"; // Select forward tracks from Tr/Best
RichDSTPrepare.OutputPIDs = "Rec/Rich/PIDs";

// Rich OO Reconstruction
ApplicationMgr.DLLs += { "RichDetTools", "RichRecTools", "RichRecAlgs" };
#include "$RICHRECALGSOPTS/BrunelReco.opts"
PrepareRichPIDs.OutputPIDLocation = "Rec/Rich/OOPIDs";

// Muon coordinate reconstruction, MuonID, cleaning
ApplicationMgr.DLLs += { "MuonRec", "MuonID" };
BrunelRecoMUONSeq.Members = { "MuonRec", "MuonIDFOI" };
#include "$MUONIDROOT/options/MuonIDFOI.opts"

// V0s and Kshort
ApplicationMgr.DLLs += { "KsReco" };
BrunelRecoV0Seq.Members += { "UpstreamProtoPAlg", "SelectKs2pipi", "V0Reco" };
#include "$KSRECOROOT/options/Brunel.opts"

// Algorithm timing
BrunelRecoTimingSeq.Members += { "TimingAlg" };
#include "$BRUNELALGSROOT/options/Timing.opts"

// Modify printout defaults
#include "$BRUNELOPTS/BrunelMessage.opts"
