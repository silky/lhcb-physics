// Default Brunel job Options.
//
// This file is included by the LHCBDBASE specific options files.
//
// This file defines, sequences and configures the algorithms to be executed
// You only need to modify it if you want to add or remove algorithms
// !! Do not modify position or order of included files !!
//==============================================================
#include "$STDOPTIONS"
#include "$STDOPTS/DetDesc.opts"

ApplicationMgr.DLLs += { "BrunelKernel", "GaudiAlg" };
EventDataSvc.ForceLeaves = true;
EventDataSvc.RootCLID    =    1;

#pragma print on
//--------------------------------------------------------------
// Brunel Phases to be executed
//--------------------------------------------------------------
ApplicationMgr.TopAlg += { "BrunelSicbInit",
                           "BrunelInitialisation/BrunelInit",
                           "BrunelPhase/BrunelDigi",
                           "BrunelPhase/BrunelTrigger",
                           "BrunelPhase/BrunelReco",
                           "BrunelFinalisation/BrunelFinish" };
ApplicationMgr.TopAlg += { "BrunelPhase/BrunelMoni" }; 
#include "$BRUNELOPTS/BrunelMoni.opts"
//--------------------------------------------------------------
// Detectors to be processed in each phase
//--------------------------------------------------------------
BrunelDigi.DetectorList  = { "SpillOver" };
BrunelDigi.DetectorList += { "VELO" , "IT", "OT" , "RICH" , "CALO", "MUON" };
BrunelTrigger.DetectorList = { "TRIGGER" };
BrunelReco.DetectorList = {"VELO","OT","IT","Tr","RICH","CALO","MUON","Timing"};

//--------------------------------------------------------------
// Subdetector algorithms
//--------------------------------------------------------------
// L0 trigger
#pragma print off
#include "$L0CALOROOT/options/Brunel.opts"
#include "$L0MUONROOT/options/Brunel.opts"
#include "$PUVETOROOT/options/Brunel.opts"
#include "$L0DUROOT/options/Brunel.opts"
#include "$MUONTOOLSROOT/options/MuonTools.opts"
#pragma print on

// L1 trigger
ApplicationMgr.DLLs += { "L1VeloTrack" };
BrunelTriggerTRIGGERSeq.Members += { "L1VeloTrackAlg" };

// Trigger truth relation tables (used by monitoring and for DST)
BrunelTriggerTRIGGERSeq.Members += { "L0CaloToMCParticleAsct" };
BrunelTriggerTRIGGERSeq.Members += { "L1Track2dTruth" };
BrunelTriggerTRIGGERSeq.Members += { "L1Track3dTruth" };

// Calorimeter digitisation and reconstruction
ApplicationMgr.DLLs += { "CaloSicbCnv", "CaloDetXmlCnv" };
#pragma print off
#include "$CALOTOOLSOPTS/Brunel.opts"
#pragma print off
#include "$CALOALGSOPTS/Brunel.opts"
#pragma print off
#include "$CALORECOPTS/Brunel.opts"
#pragma print off
#include "$CALOASSOCIATORSOPTS/Brunel.opts"
#pragma print off
#include "$CALOTRACKTOOLSOPTS/Brunel.opts"
#pragma print off
#include "$CALOMONITOROPTS/Brunel.opts"
#pragma print on

// Rich Fortran digitisation and OO digits creator 
ApplicationMgr.DLLs += { "RichDet", "RiSicbGeom", "RiSicbCnv" };
BrunelDigiRICHSeq.Members += { "RichMCRadHitsToSicbCnv" };
BrunelDigiRICHSeq.Members += { "RichMCPhotoHitsToSicbCnv" };
BrunelDigiRICHSeq.Members += { "BrunelDigiRICH", "RichMCDigitToDigitAlg" };

// Muon digitisation
ApplicationMgr.DLLs += { "MuonSicbCnv", "MuonDet" };
ApplicationMgr.DLLs += { "MuonAlgs" };
BrunelDigiMUONSeq.Members = { "MuonDigitization" };

// Inner tracker digitisation and reconstruction (clustering)
#pragma print off
#include "$ITALGORITHMSROOT/options/Brunel.opts"
#pragma print on

// Outer tracker digitisation and reconstruction (clustering)
ApplicationMgr.DLLs   += { "Magnet", "OTDet", "OTAlgorithms" };
ApplicationMgr.ExtSvc += { "MagneticFieldSvc" };
#pragma print off
#include "$OTALGORITHMSROOT/options/otDigi.opts"
#pragma print on
BrunelDigiOTSeq.Members += { "MCOTDepositCreator",
                             "MCOTDigitCreator",
                             "OTDigitCreator" };
#pragma print off
#include "$OTALGORITHMSROOT/options/otRec.opts"
#pragma print on
BrunelRecoOTSeq.Members += { "OTClusterCreator" };

// Velo digitisation and clustering (also for PuVeto and trigger)
ApplicationMgr.DLLs += { "VSicbCnv", "VeloAlgorithms", "VeloDet" };
BrunelDigiVELOSeq.Members += { "VeloSim" };
BrunelDigiVELOSeq.Members += { "VeloDataProcessor" };
BrunelDigiVELOSeq.Members += { "VeloClusterMaker" };
BrunelDigiVELOSeq.Members += { "VeloFEToL1" };

// Velo Tracking
ApplicationMgr.DLLs += { "VeloTrack" };
BrunelRecoVELOSeq.Members  = { "VeloTrackAlg" };
// VeloTrackAlg.AbortNumTrack = 1000;

// Forward tracking
ApplicationMgr.DLLs += { "LongTrack", "TrFitter", "TrExtrapolator" };
ApplicationMgr.ExtSvc += { "TransportSvc" };
BrunelRecoTrSeq.Members += { "FindLongTrack" };
BrunelRecoTrSeq.Members += { "TrEventTracksFitter/FitFw" };
FitFw.TrackContainer = "Rec/FitTrack/Forward";
#pragma print off
#include "$LONGTRACKROOT/options/Brunel.opts"
#pragma print on

// Seeding
ApplicationMgr.DLLs += { "Seeding" }; 
BrunelRecoTrSeq.Members += { "TrSeedEvent/seedEvent",
                             "TrEventTracksFitter/fitSeed" };
#pragma print off
#include "$SEEDINGROOT/options/Brunel.opts"
#pragma print on

// Velo Matching
ApplicationMgr.DLLs += { "TrMatching" }; 
BrunelRecoTrSeq.Members += { "TrMatchVeloSeed/matchVeloSeed",
                             "TrEventTracksFitter/reFit" };
matchVeloSeed.addTTClusters = false;
reFit.TrackContainer = "Rec/FitTrack/Match";

// Upstream tracking
ApplicationMgr.DLLs += { "UpstreamPR" };
#pragma print off
#include "$UPSTREAMPRROOT/options/Brunel.opts"
#pragma print on

// Clone killer and converter to TrStoredTrack
ApplicationMgr.DLLs += { "TrCleanEx" };
BrunelRecoTrSeq.Members += { "TrTrackCloneKiller" };

// VeloTT tracking
ApplicationMgr.DLLs += { "VeloTT" };
BrunelRecoTrSeq.Members += { "VeloTTFind" };
#pragma print off
#include "$VELOTTROOT/options/Brunel.opts"
#pragma print on

BrunelRecoTrSeq.Members += { "TrFit2StoredTrackCnv/StoreBest" };
#pragma print off
#include "$TRCLEANEXROOT/options/Brunel.opts"
#pragma print on
TrTrackCloneKiller.flagMode = true;

// Rich Fortran reconstruction
BrunelRecoRICHSeq.Members += { "TrToRichTrackAlg", "RichTrackToSicbCnv" };
BrunelRecoRICHSeq.Members += { "BrunelRecoRICH" };
BrunelRecoRICHSeq.Members += { "RichDSTPrepare" };
TrToRichTrackAlg.EnableFiltering = "true"; // Select forward tracks from Tr/Best

// Muon coordinate reconstruction, MuonID, cleaning
ApplicationMgr.DLLs += { "MuonRec", "MuonID" };
BrunelRecoMUONSeq.Members = { "MuonRec", "MuonIDFOI" };
#pragma print off
#include "$MUONIDROOT/options/MuonIDFOI.opts"
#pragma print on

// Algorithm timing
ApplicationMgr.DLLs += { "BrunelAlgs" };
BrunelRecoTimingSeq.Members += { "TimingAlg" };
#pragma print off
#include "$BRUNELALGSROOT/options/Timing.opts"
#pragma print on

// Modify printout defaults
#include "$BRUNELOPTS/BrunelMessage.opts"

// Intialise random number at every event
BrunelInit.InitRndmOnce = false;

// Use a spillover container for Muon that also works without M1
// (this option can be removed when we move to SicbCnv > v17r3)
SpillOverAlg.SpillOverData = { 
  "IT/Hits", "OT/Hits" , "Velo/Hits", 
  "Rich/RadiatorHits", "Rich/PhotodetectorHits",
  "Spd/Hits", "Prs/Hits", "Ecal/Hits", "Hcal/Hits", "Muon/M3/R1/Hits" };
