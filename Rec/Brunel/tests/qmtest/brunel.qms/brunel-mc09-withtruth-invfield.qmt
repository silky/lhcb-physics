<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>gaudirun.py</text></argument>
  <argument name="timeout"><integer>1200</integer></argument>
  <argument name="prerequisites"><set>
    <tuple><text>brunel.brunel-mc09-withtruth</text><enumeral>PASS</enumeral></tuple>
  </set></argument>
  <argument name="args"><set>
    <text>$BRUNELROOT/tests/options/testBrunel-defaults.py</text>
    <text>$BRUNELOPTS/Brunel-MC09-WithTruth.py</text>
    <text>$BRUNELOPTS/MC09-Files.py</text>
    <text>--option</text>
    <text>from Brunel.Configuration import *; Brunel().Histograms="Expert"; Brunel().RecL0Only=True; Brunel().EvtMax=15; from Configurables import RecInit, RichRecQCConf, MagneticFieldSvc, TrackPrepareVelo, STOfflinePosition; RecInit("BrunelInit").PrintEventTime=True; MagneticFieldSvc().ForceToUseDownMap=True; RichRecQCConf(Brunel().richMoniConfName).removeMonitor("TracklessRingAngles"); TrackPrepareVelo().reverseCharge=True; STOfflinePosition('ToolSvc.ITClusterPosition').applyLorentzCorrection=False; STOfflinePosition('ToolSvc.STOfflinePosition').applyLorentzCorrection=False</text>
  </set></argument>
  <argument name="reference"><text>../refs/testBrunel-MC09-WithTruth.ref</text></argument>
  <argument name="validator"><text>
from Brunel.QMTest.BrunelExclusions import preprocessor as BrunelPreprocessor
preprocessor = BrunelPreprocessor + \
  LineSkipper(["Requested condDB but using manually set polarity"])
validateWithReference(preproc = preprocessor)
</text></argument>
  <argument name="stderr"><text>Seckrb5: Initializing the client
</text></argument>
</extension>
