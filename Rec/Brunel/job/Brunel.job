#!/bin/csh
###########################################################
#   Initialize LSF queue parameters
#
# "-q" gives the queue (1nd by default)
# "-c" gives the CPU time in minutes
#
# -q 8nm  express
# -q 1nh  short
# -q 8nh  medium
# -q 1nd  long -> default, necessary for 500 events
# -q 1nw  verylong
#
#
#  define the job name
#BSUB -J brunel
#  define the queue
#BSUB -q 1nh
#  request a minimum amount of memory resources
#BSUB -R "maxmem > 270"
#
###########################################################
#
# in BATCH, output files are written in the BATCH machine
# and copied at the end to your $MYWORKDIR output directory
# in INTERACTIVE output files are written to the current directory
#
set MODE = $CMTCONFIG

if ($#argv == 0 ) then
  echo "\nUsage: Brunel.job <options> [<mode>]"
  echo " where:"
  echo "  <options> (mandatory) is name of options file (e.g. v200309)"
  echo "  <mode>    (optional)  is execution mode (e.g. LinuxStatic)"
  exit 0
else
  set Dver = $1
  if ($#argv == 2) then
    set MODE = "$2" 
    shift
  endif
  shift
endif
#   
set Bversion = "v22r0"
echo "Executing Brunel $Bversion using options file $Dver.opts"
#

if ($?LS_SUBCWD) then 
# in BATCH, WORKDIR is set by the system
# in BATCH, location of executable has to be given explicitly - e.g.:
  setenv MYJOBROOT ~/newmycmt/Rec/Brunel/$Bversion
else
# in interactive set WORKDIR to submission directory
  set WORKDIR = $PWD
# in interactive, executable is under same root directory as this command file
  cd `dirname $0` 
  cd ..
  set MYJOBROOT = $PWD
endif

# == set the program environment
if ($?Brunel_release_area) then
  source $Brunel_release_area/BrunelEnv/$Bversion/cmt/setup.csh
else
  source $LHCb_release_area/BrunelEnv/$Bversion/cmt/setup.csh
endif
source $MYJOBROOT/cmt/setup.csh -tag=$MODE

# Go to working directory
cd $WORKDIR

if ($?LS_SUBCWD) then
# == in batch copy the executable and options files to $WORKDIR
  cp $MYJOBROOT/$MODE/Brunel.exe tmpjob_$Dver.exe
  cp $MYJOBROOT/options/*.opts .
  setenv BRUNELOPTS .
else
# == in interactive create a link to the executable
  ln -fs $MYJOBROOT/$MODE/Brunel.exe tmpjob_$Dver.exe
endif

# == run the excutable ================================
if ($MODE == "Linuxdbx") then
  ddd tmpjob_$Dver.exe $BRUNELOPTS/$Dver.opts
else
  time tmpjob_$Dver.exe $BRUNELOPTS/$Dver.opts
endif

#  Is there a core dump
set corefile = `ls -a | grep core`
if ($corefile != "") then
   if(-e gdbcmds) rm gdbcmds
   echo where > gdbcmds
   echo quit >> gdbcmds
   gdb -x gdbcmds tmpjob_$Dver.exe $corefile<<EOF
EOF
rm gdbcmds
endif

# == job is finished: remove temporary files ==========
rm tmpjob_$Dver.exe
if ($?LS_SUBCWD) then
  rm -f *.opts
# if in batch copy output files to user directories
  ls *.* >! RETURN
endif

exit 0
