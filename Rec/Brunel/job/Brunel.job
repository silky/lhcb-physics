#!/bin/csh
###########################################################
#   Initialize LSF queue parameters
#
# "-q" gives the queue (1nh by default)
# "-c" gives the CPU time in minutes
#
# -q 8nm  = about 30 min HP735     express
# -q 1nh           3 hours         short
# -q 8nh           1 day           medium
# -q 1nd           3 days          long
# -q 1nw          10 days HP K260  verylong
#
#
#  define the job name
#BSUB -J brunel
#  define the queue
#BSUB -q z5_8nh
#
###########################################################
#
# in BATH output files are written in the BATCH machine
# and copy at the end to your $MYWORKDIR output directory
# in INTERACTIVE output files are written onto $WORKDIR
# you have to set $WORKDIR to what you want
#
if ($#argv == 0 ) then
  echo "\nUsage: Brunel.job <dbase-version> [<mode>]"
  echo " where:"
  echo "  <dbase-version> (mandatory) is SICB/dbase version (e.g. v241)"
  echo "  <mode>          (optional)  is execution mode (e.g. LinuxStatic)"
  exit 0
else
  echo "using SICB/dbase version $1"
#  setenv LHCBDBASE $LHCBSOFT/SICB/dbase/$1
  setenv LHCBDBASE ~/newmycmt/SICB/dbase/$1
endif
#   
set MODE = $CMTCONFIG
if ($?LS_SUBCWD) then 
# in BATCH, WORKDIR is already set to local directory
else
# in interactive set WORKDIR to your output directory
  setenv WORKDIR /tmp 
  if ($#argv == 2) set MODE = "$2" 
endif

# Root directory of job is parent directory of script location
set current = $PWD
cd `dirname $0` 
cd ..
set MYJOBROOT = $PWD
#
# Go to working directory
cd $WORKDIR

#
# == reset the dynamic library search path
unsetenv LD_LIBRARY_PATH
# == set the program environment
source $MYJOBROOT/cmt/setup.csh -tag=$MODE

# == set soft_links to use packages
#if ($MODE != "LinuxStatic") then
#  cd $MYJOBROOT/cmt
#  $CMTROOT/mgr/cmt build library_links
#  cd $current
#endif

# == set the name of the executable
setenv EXEC Brunel

# == in batch copy the executable,======================================= 
#    in interactive create a link to the executable you want to run =======
#
if ($?LS_SUBCWD) then
  cp $MYJOBROOT/$MODE/$EXEC.exe tmpjob.exe
  cp $MYJOBROOT/options/*.opts .
  cp $MYJOBROOT/options/${EXEC}.cards tmpjob.cards
  setenv BRUNELOPTS .
  setenv JOBOPTPATH ${EXEC}.opts
  setenv SICBCARDS tmpjob.cards
else
  ln -fs $MYJOBROOT/$MODE/$EXEC.exe tmpjob.exe
endif
#
# == run $EXEC.exe ============================================
#
if ($MODE == "Linuxdbx") then
  ddd tmpjob.exe
else
  time tmpjob.exe
endif

# == job is finished: remove temporary files ==========
rm tmpjob.exe
rm -f *.opts
rm -f tmpjob.cards

# == job is finished: if in batch copy output files on user directories
#
if ($?LS_SUBCWD) then 
  ls *.* >! RETURN
endif

exit 0








