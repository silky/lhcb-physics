Package: Rec/Brunel
Package Coordinator: Marco Cattaneo

Purpose: LHCb reconstruction program

! 20010904 Brunel v7 (MC)
  This version is to be used for data produced with SICBMC v248/dbase v241
  ("LHCb-Light")

  It consists of the same code as v6, but uses a different geometry.

  In options/
   LHCbLight.opts - new file to set up LHCb-Light tracker geometry
   Brunel.opts    - include LHCbLight.opts

  In cmt/requirements
  ===================
  use dbase v241 SICB
    standard.stream - use new pipe and velo
      
    vsrp.cdf and vpil.cdf - Thickness of the RF shield and 
                            silicon detectors changed (J. Palacio)
    field042.cdf - introduce field in Velo (G. Corti)
    magnet.cdf   - remove rich 1 shielding plate (M. Needham)
    rich.cdf     - remove aerogel, reduce radiation thickness of mirror 
                   and supports (J. Libby)
    witr.cdf, wotr.cdf, wsta.cdf - 
                   reduce number of tracking stations to 4 (M. Needham)
    pipe8.22.cdf - Be first section (G. Corti)

! =================================================================
! 20010904 Brunel v6 (MC)
  This version is to be used for data produced with SICBMC v247/dbase v240
  ("LHCB-classic", tracker cross-geometry)

  In options/
   Brunel.opts
     Remove tracking ErrorMax options (fixed in tracking code)
   BrunelMessage.opts
     Name of TrEventTracksFitter algorithm changed to trFit

  In cmt/requirements
  ===================
  use dbase v240 SICB
    20010821 - dbase v240
     cdf/     changes for tracking cross geometry, 
              increase thickness of OT stations to 3%,
              remove stations 4 and 11,
              add pipe7.22.cdf (new pipe from G.Corti)
     standard.stream - reads pipe7.22.cdf             
    20010625 - dbase v239r1
     beamrawh3_v2.cdf   - this file must be read in to produce RAWH3: 
                          the luminosity is fixed to 5.0x10^32
     standard.stream    - reads beamrawh3_v2.cdf

  use detdes v14 SICB
   20010821 - detdes v14 (M.Needham)
     backwards incompatible changes for new tracker cross geometry.

  use ITEvent      v6     Event
    Changes for new cross geometry
    Remove triple gem code

  use OTEvent      v6     Event 
    backwards incompatible changes for cross geometry  
    insure channels number from one everywhere
    reserve space in internal vector of OTLayer object - should save time

  use TrEvent      v6     Event
    add copy constructer to TrTrueTrack
    retune ITHitOnTrack error

  use ITAlgorithms v6     IT
    new version for cross geometry

  use OTAlgorithms v6     OT
    Changes for the cross geometry of OT
    Remove some unnecessary calls to msgstream in tools
    Changes in OTDigitize to speed things up (suggested by Markus)
    Delegate new to tool in OTHitsCreator

  use TrAlgorithms v6     Tr
    Changes for cross geometry, clean-up of code

  use L0DU v2r1 L0
  - Modify L0DUReport to be a DataObject (only one in the output)
  - Store the L0DUReport in the Transient store, this wasn't done !

! =================================================================
! 20010824 Brunel v5r1 (MC)

   In cmt/requirements
     use XmlDDDB v6r1
     - Fix the SPD Et slope: Was 2 GeV, should be 2 MeV !!!!

     use SicbCnv v13r1
     - Protections in book-keeping database queries


! 20010821 Brunel v5 (MC)

   In src/BrunelSicb/
   -----------------
   BrunelInitialisation.cpp - make sure Raw and Rec sub-event roots are created
   dropbanks.F - do not drop E1RW bank (needed to generate MCSensPlaneHit)
 
   In options/
   -----------
   BrunelMessage.opts - set global output level to WARNING or above, over-ride
                        it for ChronoStatSvc to print final statistics
                      - set output level of some tracking algorithms to ERROR,
                        to suppress excessive printing in production
   Brunel.opts - Set ErrorMax of tracking algorithms to 1000, to prevent
                 program stopping wih 'missing container' on empty events

   In cmt/requirements
   -------------------
   >>> Bug fixes and physics changes <<<

   use trivert v5r3
    vth1.F - Fix problem due to 90 degree roration on VELO. (Hans Dijkstra)

   use XmlDDDB v6
    - put correct calibration Hcal parameters (calculated by O.Iouchtchenko)
    - Change the HCAL ActiveToTotal parameter form 55 to 40
    - Fix the 'ActiveToTotal' parameter for Ecal, after calibration with 
      SICBMC v241 data plus Signal and Digit processors

   use L0Muon v3r1
    - Fixed bug in the CreateTower procedure for the cases of crossing the 
      boundary between regions; 
    - All the numbering for quarters/regions/indices starts from 0. 
  
   use CaloAlgs v3 (was v2)
    - Several bug fixes and reorganisation of histograms (see release notes)

   use SicbCnv  v13
    SicbMCEventCnv - set m_pileUp to number of PASS banks 
  
   use CaloSicbCnv  v4
    - Fix bug in SicbCaloDigitCnv, SummedDeposit were not linked to the digits
    

   >>> Remaining changes are for upgrade to Gaudi v8, LHCb v8
   >>> Should not affect physics functionality
   >>> See corresponding release notes for details

   use GaudiPolicy  v5     (was v4)
   use GaudiSys     v8     (was v7r2)
   use HbookCnv     v10r1  (was v9)
   use CERNLIB      v2001  (was v2000)
   use BrunelKernel v2     (was v1)
   use DetDesc      v7     (was v6)
   use XmlDDDB      v6     (was v5)
   use CaloDet      v2r1   (was v1)
   use LHCbEvent    v11    (was v10)
   use L0Event      v3     (was v2)
   use ITEvent      v5     (was v4)
   use OTEvent      v5     (was v4)
   use TrEvent      v5     (was v4r1)
   use CaloEvent    v6     (was v5)
   use VeloEvent    v5     (was v4)
   use L0Calo       v2     (was v1)
   use L0Muon       v3r1   (was v2)
   use L0DU         v2     (was v1)
   use CaloGen      v2     (was v1)
   use CaloAlgs     v3     (was v2)
   use TrKernel     v5     (was v4)
   use ITAlgorithms v5     (was v4)
   use OTAlgorithms v5     (was v4)
   use TrAlgorithms v5     (was v4r1)
   use SicbCnv      v13    (was v12)
   use CaloSicbCnv  v4     (was v3)
   use L0SicbCnv    v3     (was v2)
   use MuonSicbCnv  v3     (was v2)
   use TrSicbCnv    v2     (was v1)
   use VSicbCnv     v5     (was v4)
   use GDUMMY       v1r5   (was v1r4)

! =================================================================
! 20010629 Brunel v4 (MC)
   Add C++ L0 trigger simulation
   Remove old L0_2x2 simulation

   In options/
   -----------
   Brunel.opts     - include Brunel.opts from L0CALO, L0MUON, L0DU
                     Add DLLs L0SicbCnv, MuonSicbCnv 
   BrunelMoni.opts - Add CALO and TRIGGER to BrunelMoni.DetectorList 
   
   In src/BrunelSicb/
   ------------------
   trigger.F - remove call to L0_2X2

   In cmt/requirements
   -------------------
   add  use of L0Calo (v1), L0Muon (v2), L0DU (v1), L0Event (v2)
               L0SicbCnv (v2), MuonSicbCnv (v2)

   use Futil v10r3
>   ubdropobj - new routine to drop the LAST object in a given partition

   use simmubg v5r2

>  murmsingle.F  - all 4 routines now add the atmc references to the last
>  murmmulti.F   - atmc partition.
>  murmscomp.F   -   
>  murmmcomp.F   -
>
>  The routine murmbg.F now uses a new Futil (v10r3) routine, mudropobj.F to
>  correctly remove background ATMC objects.
>
>  murmbg.F      - Calls ubdropobj.F to remove background ATMC references.
>
>  murmsingle.F  - Extra debug messages added to catch problems 
>  murmmulti.F   - with too many ATMC objects (>10000).
>  murmscomp.F   -   
>  murmmcomp.F   -


===============================================================================
! 20010625 Brunel v3r3 (MC)
   Add possibility to add muon background (switched on by default)

   In src/BrunelSicb/
   ------------------
   BrunelDigiMUON.cpp - add conditional calls to MURMBG, MUBACKGROUND, steered
                        by addBkg job option (called by default)
   BrunelDigiMUON.h   - add private member m_addBkg

   In options/Brunel.opts - add BrunelDigiMUON.addBkg = true;
   ----------------------

   In cmt/requirements
   -------------------
     use dbase v239
>  standard.stream - new MUGB and MUBC muon background parametrization files
>                    (P.Colrain)

     use simmubg v5
>  package to generate muon background
===============================================================================
! 20010620 Brunel v3r2 (MC)
   Same as v3r1, but using bug fixes from digvdet v2r3 and trivert v5r2

   In cmt/requirements
   -------------------
     use digvdet v2r3
>   vrp_get_strip_num.F, vrp_get_coord.F - fix the problem arising from the
>           rotation of the VELO by 90d in phi.(M.McCubbin)

     use trivert v5r2
>   vertex_x_y.F - fix the problem arising from the
>           rotation of the VELO by 90d in phi.(M.McCubbin)

===============================================================================
! 20010606 Brunel v3r1 (MC)
   This version reads SICBMC data starting from SICBMC v245, dbase v238
   ** It is not backwards compatible with older RAWH formats and geometry **
   ** It is no longer possible to do Pileup in Brunel                     **

   New features relative to v3:
   - RICH extended tracking executed for all events
   - AXTK updated with PID information from extended tracking
   - New VELO geometry description
   - Drop some banks from DST (as with SICBDST)

   In options/
   ----------
   BrunelInput.opts 
     - Fix format of SpillOverSelector.Input option,
     - New option BrunelFinish.DropDSTBanks to control call to DROPBANKS

   Brunel.cards - Switch on RICH extended tracking for all events
>    DIGI 'RICH' 2
>    RECO 'RICH' 3

   BrunelMessage.opts: Use default Gaudi message format

   In src/BrunelSicb/
   -----------------
   BrunelInitialisation.cpp: 
     - initialise SICB variable NPILEUP with value from PASS bank 
       (to cope with RAWH2) - not compatible with SicbCnv PileUpAlg

   BrunelFinalisation.cpp:   Add call to DROPBANKS
   dropbanks.F:              New, to drop unwanted SICB banks from DST

   In cmt/requirements
   -------------------
     use TrEvent      v4r1
>  Fixes for new velo geometry

     use TrAlgorithms v4r1
>  Bug fix in job options

     use dbase        v238
>          new VELO geometry description
> vsrp.cdf - modified
> vpil.cdf - modified

     use detdes   v13
>  utnext.F - utnext("MATE") returns the next free material number
>             utnext("TMED") returns the next free tracking medium number
>  utmatm.F - uses utnext("TMED") to get the next free tmed #
>  utmatn.F - uses utnext("MATE") to get the next free mat 
>
>  vrpigeom.F, vrpgeom.inc, vsvnam.inc - modified for new VELO geometry
>                                        description.
>  muginit2.F - replace GAPFRAMEPAR(IMATFR,IL,I)=NINT(Q(LP+5) with
>                       GAPFRAMEPAR(IMATFR,IR,I)=NINT(Q(LP+5))
>               IL was never set.

     use Futil    v10r1
>  src/axtrigger.F - put version by H.Dijkstra (same as in SICBDST/minidst)
>     with values tuned for SICBDST v235

     use axreclib v4r2
>  src/aximperr.F - bug fix, introduced missing dummy argument in 
>                   call to rmmlt routine (necessary to run on NT, gcorti)
>  src/axpartid.F - use results from extended tracking (R.Forty)
===============================================================================
! 20010521 Brunel v3 (MC)
  This is the first version to be used for an official LHCB production 

  This version has been restructured as two packages. Rec/Brunel contains the
  statically linked code needed to run SICBDST routines. C++ components of the
  reconstruction framework have been moved to the package Rec/BrunelKernel

  There are two subdirectories in /src:
    BrunelSicb   contains interface code to SICB (statically linked)
    ObsoleteSicb contains interface code to SICB that is no longer used
                 because SICB algorithms have been replaced by equivalent 
                 C++ algorithms.
  Files have been rename to avoid multiple . in filenames (to please nmake)

  Job options file structure has been modified relative to Brunel v1r6

  requirements use explicitly the SICB packages, no longer SICBDST

  #### Physics changes with respect to SICBDST v252 ####
  - Uses C++ tracking 
    Intermediate tracking banks (e.g. WIDG, WODG) are not produced

  - Uses C++ Calorimeter digitisation
  
  - Does not run old L1 track trigger (T1TRACK from trit1tr package)
    TTR1 bank is not produced.
===============================================================================
! 20001219 Brunel v1r6 (MC)
  requirements     - use SicbCnv v10 (spillover), SICBDST v235r3
  Brunel.Phase.cpp - fix bug in a log message (reported by O.Callot)
  BrunelZebra.inc  - increase ZEBRA COMMON block size to 12M words

! 20001120 Brunel v1r5 (MC)
  Brunel.Phase.cpp - No longer instantiates algorithms, instead it instantiates sequences
                     This introduces modifications in the BrunelOptions.txt: all algorithms
                     must now be declared as members of a sequence - see user guide for details
  requirements     - Use Gaudi release 6, SICBDST v235r2
  options          - New directory, containing structure of job options files - see user guide

! 20001003 Brunel v1r4 (Flr)
           to link a Brunel static application: gmake tag=LinuxStatic
           to run a job in static mode remove the following line from
           BrunelOptions.txt : ApplicationMgr.DLLs = {...}
 
  requirements      - use the highest version of LHCbCMT (v3r3 to define
                      package_tag pattern)
                    - use SICBDST v235 before any Gaudi packages to make sure
                      that Futio and Finclude version numbers are those set
                      by SICBDST.
                    - use SicbCnv v8r1 (to remove a fake main program)

! 20000824 Brunel v1r3 (MC)
  requirements      - use SICBDST v235
  jobOptions        - cleaned up

! 20000726 Brunel v1r2 (MC)
  requirements      - use SICBDST v234r2 and GaudiSys v5
  BrunelZebra.inc   - increase ZEBRA size to 9000000 (as for SICBDST)
  *.cpp             - Changes for GaudiSys v5 (compulsory implementation of
                      initialize(), finalize())
  BrunelPhase.h,.cpp- Remove private member m_AlgList, now exists in 
                      Algorithm base class

! 20000626 Brunel v1r1 (MC)
  requirements      - use SicbCnv v7r3, link directly to $(SICBDSTROOT)/src/sicbvers.F
  BrunelZebra.inc   - new, to over-ride size of ZEBRA COMMON (set to 8 000 000)
  GetZebraSize.F    - new, over-rides routine of same name in SicbCnv 
  Brunel.Trigger.TRIGGER.cpp - call TRLAST in finalise()

! 20000529 Brunel v1
  requirements      - use GaudiConf v1 and SICBDST v233r2 (Flr)
  job/              - new directory which contains :      (Flr)
  Brunel.job        - script to run Brunel, uses Brunel.cards and 
                      BrunelOptions.txt
  Brunel_lsf.job    - contains options for Gaudi and SICBDST,
                      does not use Brunel.cards and BrunelOptions.txt
  Brunel.cards      - SICBDST data cards file
  BrunelOptions.txt - Gaudi jobOptions file
  Brunel/             remove options.txt files (Flr)
  udinit.F          - stop the job if SICBDST cards file is not found. (Flr)
  Brunel.Init.F     - add printout of event number if DEBU card (Flr)
    
! 20000519 Brunel v1
  First version of LHCb reconstruction program.

  This version has the same functionality as SICBDST v233, containing only 
  wrapped FORTRAN code